{
  "createdAt": "2025-02-07T01:25:28.896Z",
  "updatedAt": "2025-06-04T01:13:28.259Z",
  "id": "1006",
  "name": "PostToChatwoot",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant?.title}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Direct Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6180,
        300
      ],
      "id": "147724af-55d0-4e43-b3a3-511eed03e2b5"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**{{$json.participant.title}}**: {{$json.payload.content}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Prepend Title",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6600,
        460
      ],
      "id": "d9084da2-e002-4f27-9369-c1a361303648"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "operation": "download",
        "messageid": "={{ $json.payload.content_attributes?.items?.quepasa?.msgid ?? $json.payload.echo_id }}",
        "fileName": "={{$json.attachment.filename}}"
      },
      "id": "e3ea0e6d-aaaa-4948-9e65-e54d214f216a",
      "name": "Quepasa Download Incoming",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        7420,
        120
      ],
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "2bd519ce-ef99-424b-8867-fef4cc43c63e",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        4440,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.attachment}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Incoming Attachment",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6800,
        280
      ],
      "id": "3ec8bddc-01a2-44f8-b18d-2a16d51092de"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "2ebb1857-0bd1-4ce1-8260-0dd9c5dedbbe",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        7860,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "ae6caf41-9ed8-4f91-8cd6-002c09528595",
      "name": "(In) Error On Get Attach ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8040,
        180
      ]
    },
    {
      "parameters": {
        "content": "## Fail Retry \nImportant to retry on fail because if you are using any external storage, it will try to save at this time.\nSo you need to ensure success ...",
        "height": 347.0509255000625,
        "width": 258.1602840291324
      },
      "id": "ba5a7c7a-9196-4be0-b970-eee501d53263",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        11020,
        760
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost ?? \"http://127.0.0.1:31000\" }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.extra.cwhost ?? \"http://127.0.0.1:3000\" }}"
            },
            {
              "name": "extra.qptoken",
              "value": "={{ $json.extra.qptoken ?? $json.extra.identifier }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f79d65b7-f0c9-4c0e-9887-c57939380a5d",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        5260,
        160
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.24) Updates\n* execution data\n\n## Recommendations \n* Remember set timeout to 10 seconds",
        "height": 262.55904520292785,
        "width": 442.12799981446017
      },
      "id": "675bee64-e067-4673-86c4-0b3a1179a08b",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4340,
        -120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.synopsis }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "c35cfd0c-376e-4f32-aa47-d7895c26ee85",
      "name": "If InReply | Reaction ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5800,
        280
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.payload.content_attributes.in_reply_to.split('-')[2] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dec85ebc-8fc6-4180-856d-e1352c5b77ab",
      "name": "Prepend Reference",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        5980,
        200
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.extra.cwhost }}/api/v1/accounts/{{ $json.extra.account }}/conversations/{{ $json.conversation.id }}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $json.payload }}",
        "headerParametersJson": "={ \"api_access_token\": \"{{ $json.extra.atoken }}\" }"
      },
      "name": "Send Edited Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        6340,
        20
      ],
      "id": "ab7bcd49-2a6e-4de2-987a-4f27e3895ea3",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "multipart-form-data"
        },
        "sendBinaryData": true,
        "binaryPropertyName": "attachments[]:data",
        "headerParametersJson": "={ \"api_access_token\": \"{{$json.extra.atoken}}\" }",
        "queryParametersJson": "={{$json.payload}}"
      },
      "name": "Post Incoming Message Attachment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        11320,
        920
      ],
      "id": "e16b74c4-6f9d-4e5f-aa6f-26457794a3d3",
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "attachment.thumbnail.data",
        "options": {
          "dataIsBase64": true,
          "fileName": "={{ $json.attachment.filename }}",
          "mimeType": "image/jpeg"
        }
      },
      "id": "4f1e7c3e-6e49-404e-8533-343b40cc92b0",
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        10000,
        840
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const vcard = $json.vcard;\n\n// split the string on \\n or \\r characters\nconst lines = vcard.text.match(/[^\\r\\n]+/g);\n\nconst fn = lines.find(element => element.startsWith(\"FN:\"));\nif (fn) {\n  vcard.fn = fn.substring(3);\n}\n\nconst items = [];\n\nfunction HandlerPhone(item, phoneline){\n  // getting phone\n    item.phone = phoneline.split(\":\").pop();\n    if (item.phone) {\n      item.phone = item.phone.replace(/\\D/g, \"\");\n      if (item.phone.length === 0) item.phone = undefined;\n    }\n    \n    // getting phone old method\n    item.phone_old = phoneline.split('TEL')[1]?.split(':')[0]?.split('waid=')[1];\n    if (item.phone_old) {\n      item.phone_old = item.phone_old.replace(/\\D/g, \"\");\n      if (item.phone_old.length === 0) item.phone_old = undefined;\n    }\n    \n    // getting whatsapp id\n    const waidindex = phoneline.indexOf(\"waid=\");\n    if (waidindex > -1) {\n      item.waid = phoneline.substring(waidindex + 5).split(':')[0];\n      if (item.waid) {\n        item.waid = item.waid.replace(/\\D/g, \"\");\n        if (item.waid.length === 0) item.waid = undefined;\n      }\n    }    \n}\n\nfunction ForEachItem(element, index, array) {\n  element = element.substring(4);\n  const itemindex = element.split('.')[0];    \n  const telprefix = itemindex + \".TEL;\";\n  if (element.startsWith(telprefix)) {\n    element = element.substring(5);\n    \n    let item = items.find(s => s.index == itemindex);\n    if (!item) { item = { index: itemindex }; items.push(item); }\n\n    HandlerPhone(item, element);\n  }    \n}\n\nfunction ForEachTEL(element, index, array) {\n  element = element.substring(4);  \n    \n  const item = {}; \n  items.push(item);\n\n  HandlerPhone(item, element);  \n}\n\nconst itemlines = lines.filter(element => element.startsWith(\"item\"));\nitemlines.forEach(ForEachItem);\n\nconst tellines = lines.filter(element => element.startsWith(\"TEL;\"));\ntellines.forEach(ForEachTEL);\n\nvcard.items = items;\n\nif (vcard.items.length > 0) {\n  // setting default phone\n  vcard.phone = vcard.items[0].waid ?? vcard.items[0].phone ?? vcard.items[0].phone_old;\n}\n\nreturn $input.item;"
      },
      "id": "487b7680-e0ff-4ebd-be34-f2f9f1fba1fc",
      "name": "Get vCard Infos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        10060,
        460
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "message_type",
              "value": "={{ 2 }}"
            },
            {
              "name": "content",
              "value": "={{ $json.import.message }}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        }
      },
      "name": "Post Success Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        12300,
        440
      ],
      "id": "d2654764-c683-4c63-908a-532e15cc67eb",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.id as internal_id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.extra.account }}' AND messages.source_id = '{{ $json.payload.source_id }}' ORDER BY messages.id DESC LIMIT 1;\n",
        "options": {}
      },
      "id": "6c0873d4-3c5a-4b78-bca5-1399c61810c9",
      "name": "Get Edited Message Id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5820,
        -60
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.payload.edited }}",
              "value2": true
            }
          ]
        }
      },
      "id": "02761a71-12ff-49d7-8e1d-98e4569f8601",
      "name": "If Edited Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5420,
        160
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$json.payload}}",
        "headerParametersJson": "={ \"api_access_token\": \"{{$json.extra.atoken}}\" }",
        "queryParametersJson": "{}"
      },
      "name": "Post Incoming Message Without Attachment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        10700,
        260
      ],
      "id": "69177bff-d47b-4787-bdf7-6abccd0bdfa9",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $binary[\"data\"].fileExtension }}",
        "rules": {
          "rules": [
            {
              "value2": "vcf"
            },
            {
              "value2": "url",
              "output": 1
            }
          ]
        },
        "fallbackOutput": 3
      },
      "id": "299757e9-57e0-4303-a07f-b53796d1cb32",
      "name": "Switch By Extension",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        8840,
        460
      ]
    },
    {
      "parameters": {},
      "id": "8b65b491-b68f-4867-b790-73d0860b551f",
      "name": "Extension .url",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9380,
        900
      ]
    },
    {
      "parameters": {},
      "id": "b85e5b0c-2962-437b-81e0-fa1938260391",
      "name": "Extension .vcf",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9440,
        480
      ]
    },
    {
      "parameters": {},
      "id": "c2989962-f350-4a45-a913-66436a3b9beb",
      "name": "Any Other Extensions",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9380,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "0abb5ce7-db3d-48f0-bdbd-33def3b742ad",
      "name": "Insert Contact Into Chatwoot",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10700,
        460
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f7479f27-d8da-4ed1-821e-09ce9ec71d4c",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        12080,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "49b0f060-f1e2-455b-9c91-a62747772915",
      "name": "If Insert Contact Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        11180,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error.message }}",
              "operation": "contains",
              "value2": "has already been taken"
            }
          ]
        }
      },
      "id": "e5798771-b881-43f9-978b-bff5ff6009ad",
      "name": "If Already Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        11360,
        200
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "✅ Contato já existe"
            }
          ]
        },
        "options": {}
      },
      "id": "7eb337d4-9eb7-4f2b-a7ef-11e12e0cb239",
      "name": "Set Success For Already Exists",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        11600,
        60
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "✅ Contato importado com sucesso"
            }
          ]
        },
        "options": {}
      },
      "id": "b27bbad3-70a9-482b-b763-485cc520b81b",
      "name": "Set Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        11600,
        360
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "=Falha na importação: {{ $json.error.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "67feb49b-012c-4ffd-a4f9-79de74fc13ef",
      "name": "Set Fail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        11600,
        220
      ]
    },
    {
      "parameters": {},
      "id": "7375da04-8209-4df6-9eec-24b2495d0de7",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        11880,
        220
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**Nome:** {{ $json.vcard.fn }}\n**Telefone:** {{ $json.vcard.phone }}\n"
            }
          ]
        },
        "options": {}
      },
      "id": "c4035051-0ba4-4500-a4fd-fbf34a21e632",
      "name": "Adjust Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        10280,
        460
      ]
    },
    {
      "parameters": {},
      "id": "d1cfc571-6aa8-4270-a7eb-3f8fcb143723",
      "name": "(Localization) Follow and Post",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10160,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$binary}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "125b537e-0f6b-4a8d-a926-a523f0fe551c",
      "name": "Post Incomming Text Only ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8640,
        360
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {},
      "id": "d2dff599-617e-4f45-813a-9ee0f1f34d20",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8840,
        280
      ]
    },
    {
      "parameters": {},
      "id": "4e36e11d-4e6b-4613-b3f2-d216bdba7a2e",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9840,
        620
      ]
    },
    {
      "parameters": {},
      "id": "a2368743-0384-4629-8d62-024aa16bd6a3",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5620,
        40
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "ec726259-341d-45bb-bfd5-7c1d5a9df3c1",
      "name": "Merge Edited Message Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        6020,
        20
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $env['C8Q_MSGFOR_EDITED_CONTENT'] ?? '\\u26A0\\uFE0F ***Essa mensagem foi editada !***' }}\n\n-------------------------------------\n{{ $json.payload.content }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to_external_id",
              "value": "={{ $json.payload.source_id }}"
            }
          ],
          "number": [
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ +$json.internal_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7bc68c78-ca78-4c28-a7ea-041dc274c417",
      "name": "Prepend Edited Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        6180,
        20
      ]
    },
    {
      "parameters": {},
      "id": "8ba34871-8e02-49fb-abdb-e42541709696",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5620,
        280
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $json.vcard.fn }}"
            },
            {
              "name": "phone_number",
              "value": "=+{{ $json.vcard.phone }}"
            },
            {
              "name": "identifier",
              "value": "={{ $json.vcard.phone }}@s.whatsapp.net"
            }
          ]
        },
        "options": {}
      },
      "id": "039c0d92-ca01-4d49-b74c-ebb09e8cb58e",
      "name": "Try to Add Contact On Chatwoot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        10960,
        340
      ],
      "alwaysOutputData": true,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "90614e3a-8bdb-4eb4-8add-02f29235e4e0",
      "name": "No Operation, do nothing5",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        7400,
        360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "572f3dac-71f7-4990-afd0-5fcb22e57545",
      "name": "If Not Empty Content ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7000,
        380
      ]
    },
    {
      "parameters": {},
      "id": "2123c520-7168-406d-9447-07a559f6d235",
      "name": "(In) Text Message Following With Attachment",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8420,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $env['C8Q_MSGFOR_UNKNOWN_CONTENT'] ?? '! \"Algum EMOJI\" | \"Alguma Reação que o sistema não entende ainda ..\"' }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b4bcc477-eca9-4a40-b4dc-2759532e9397",
      "name": "Set Unknown Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        7200,
        460
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $env['C8Q_MSGFOR_ATTACHERROR_CONTENT'] ?? '** Falha ao baixar anexo !' }}\n\n-------------------------------------\nmessage id: {{ $('PAYLOAD').item.json.payload.content_attributes?.items?.quepasa?.msgid ?? $('PAYLOAD').item.json.payload.echo_id }}\nfilename: {{ $json[\"attachment\"][\"filename\"] ?? \"unknown\" }}\nerror: {{ $json.error }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2e2318e8-1f68-45f1-ab43-a3751315700a",
      "name": "(In) Prepend Attach Error Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8240,
        100
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "= {{ $env['C8Q_MSGFOR_LOCALIZATION_CONTENT'] ?? '** Localização **' }}\n\n-------------------------------------\n{{ $json.attachment.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a3842800-6392-424a-b64d-aedc148a2110",
      "name": "Override Localization Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9600,
        900
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_TOCHATWOOTTRANSCRIPT'] ?? 'pi4APHD9F05Dv6FR' }}",
        "mode": "each",
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "db3b3880-ec09-4c7b-bf10-891fc72d4242",
      "name": "Throw Audio Transcript Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        12100,
        1040
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "19a56ff4-9d4b-4b6a-82cc-4cc55b3ee1ad",
              "leftValue": "={{ $json.event }}",
              "rightValue": "audio",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "2a96a9dc-5069-441c-abf2-995aa10ef929",
              "leftValue": "={{ $json.payload.message_type }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "e49bac21-445a-47a1-826d-1ecdcd06d0d5",
              "leftValue": "={{ $json.chat.chatwoot?.skipaudiotranscript ?? false }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f688aa85-3d55-43ae-8fa9-6ce5c99167d9",
      "name": "Is Valid Audio For Transcript",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        11420,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "30ec207d-2233-4ed5-a6e2-683e8325b6df",
      "name": "From .vcf",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10860,
        620
      ]
    },
    {
      "parameters": {},
      "id": "f5073e80-f145-4417-a8f8-1c975dc6e45f",
      "name": "From .url",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10640,
        920
      ]
    },
    {
      "parameters": {},
      "id": "770298cf-ef6b-45d3-9531-92710f54817f",
      "name": "From any *",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10640,
        1200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "823c5aa8-d3fa-452d-9d8e-9a6b7ad8c0f0",
              "name": "msgid",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f9da128b-b20c-4c30-a0a3-4ced64389824",
      "name": "Getting Msg Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        11640,
        920
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "672ac903-4d0a-4a38-99e3-824fda7c7a8a",
      "name": "Merge With Posted Msg Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        11880,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e4c92b92-7d5c-4835-8f9d-c4cd0e384533",
              "leftValue": "={{ $json.participant.phone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "96c64c7e-e7a0-499a-a130-4a6f8f9cf4ba",
      "name": "If Has Phone ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        6380,
        380
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**({{ $json.participant.phone }}) {{$json.participant.title}}**: {{$json.payload.content}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Prepend Title & Phone",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6600,
        320
      ],
      "id": "28f695b5-ab74-4a34-bda6-f58f00d395a9"
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "vcard.text",
        "options": {
          "keepSource": "json"
        }
      },
      "id": "75866870-d130-4fc2-abe2-4ea81872f894",
      "name": "Extract VCard",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        9840,
        460
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.extra }}",
        "options": {}
      },
      "id": "7b10ec64-5111-43d7-b198-1d1dcd16dd0b",
      "name": "EXTRA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4940,
        160
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $('When Called By Another Workflow').item.json }}",
        "options": {}
      },
      "id": "9605b2e4-0f6c-4597-ac93-4a4b01e691c3",
      "name": "PAYLOAD",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5100,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "efb2f26e-8d25-4e23-a8e1-8101eee24685",
              "leftValue": "={{$json.attachment.data}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "33cedaec-537f-4bd5-a388-a3e82495e6ef",
      "name": "If Has BASE64 Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        7160,
        100
      ]
    },
    {
      "parameters": {},
      "id": "8b426206-a858-4fdf-9301-950eca0e8db5",
      "name": "(In) Attachment",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        7000,
        200
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "attachment.data",
        "options": {
          "fileName": "=ads-{{ $json.payload.source_id }}.jpeg",
          "mimeType": "image/jpeg"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        7420,
        -60
      ],
      "id": "5408e28e-4a6a-4547-b4a3-c800ec566923",
      "name": "Convert to File",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "88a55070-1e21-4703-a588-c430857165cc",
              "leftValue": "={{ $json.attachment.thumbnail }}",
              "rightValue": "={{ $json.attachment.thumbnail }}",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ca69dc47-2af3-4780-9d3a-0ebcd05d83f3",
      "name": "If Has Thumbnail",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        9800,
        900
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "account",
              "value": "={{ $json.extra.account ?? \"-\" }}"
            },
            {
              "key": "inbox",
              "value": "={{ $json.extra.inbox ?? \"-\" }}"
            },
            {
              "key": "soc",
              "value": "={{ String($json.extra.soc ?? \"-\")}}"
            },
            {
              "key": "conversation",
              "value": "={{ $json.conversation.id ?? \"-\" }}"
            },
            {
              "key": "chat",
              "value": "={{ $json.chat.id ?? \"-\" }}"
            }
          ]
        }
      },
      "id": "10afa501-9b8d-4f8f-b3d9-038406980cdf",
      "name": "Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        4940,
        -60
      ]
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 258.7128298295323,
        "width": 360.98769819114443
      },
      "id": "56d2ca6b-e4c8-41a1-9189-aa373ee24ab0",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4820,
        -120
      ]
    }
  ],
  "connections": {
    "Direct Message ?": {
      "main": [
        [
          {
            "node": "Has Incoming Attachment",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Has Phone ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Title": {
      "main": [
        [
          {
            "node": "Has Incoming Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Download Incoming": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "EXTRA",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Incoming Attachment": {
      "main": [
        [
          {
            "node": "(In) Attachment",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not Empty Content ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "(In) Error On Get Attach ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Error On Get Attach ?": {
      "main": [
        [
          {
            "node": "(In) Prepend Attach Error Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(In) Text Message Following With Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "If Edited Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If InReply | Reaction ?": {
      "main": [
        [
          {
            "node": "Prepend Reference",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Direct Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Reference": {
      "main": [
        [
          {
            "node": "Direct Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "(Localization) Follow and Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get vCard Infos": {
      "main": [
        [
          {
            "node": "Adjust Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Edited Message Id": {
      "main": [
        [
          {
            "node": "Merge Edited Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Edited Message ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch By Extension": {
      "main": [
        [
          {
            "node": "Extension .vcf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extension .url",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Any Other Extensions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extension .url": {
      "main": [
        [
          {
            "node": "Override Localization Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extension .vcf": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract VCard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Any Other Extensions": {
      "main": [
        [
          {
            "node": "From any *",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Contact Into Chatwoot": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Try to Add Contact On Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Post Success Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Insert Contact Error": {
      "main": [
        [
          {
            "node": "If Already Exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Already Exists": {
      "main": [
        [
          {
            "node": "Set Success For Already Exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Fail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Success For Already Exists": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Success": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fail": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adjust Content": {
      "main": [
        [
          {
            "node": "Insert Contact Into Chatwoot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post Incoming Message Without Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Localization) Follow and Post": {
      "main": [
        [
          {
            "node": "From .url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Incomming Text Only ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch By Extension",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Post Incoming Message Without Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "From .vcf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Get Edited Message Id",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Edited Message Info",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Edited Message Info": {
      "main": [
        [
          {
            "node": "Prepend Edited Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Edited Content": {
      "main": [
        [
          {
            "node": "Send Edited Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "If InReply | Reaction ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Try to Add Contact On Chatwoot": {
      "main": [
        [
          {
            "node": "If Insert Contact Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "Post Incomming Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Empty Content ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Unknown Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Text Message Following With Attachment": {
      "main": [
        [
          {
            "node": "Post Incomming Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Unknown Content": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Prepend Attach Error Content": {
      "main": [
        [
          {
            "node": "(In) Text Message Following With Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Override Localization Content": {
      "main": [
        [
          {
            "node": "If Has Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Valid Audio For Transcript": {
      "main": [
        [
          {
            "node": "Merge With Posted Msg Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "From .vcf": {
      "main": [
        [
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From .url": {
      "main": [
        [
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From any *": {
      "main": [
        [
          {
            "node": "Is Valid Audio For Transcript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Incoming Message Attachment": {
      "main": [
        [
          {
            "node": "Getting Msg Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge With Posted Msg Id": {
      "main": [
        [
          {
            "node": "Throw Audio Transcript Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting Msg Id": {
      "main": [
        [
          {
            "node": "Merge With Posted Msg Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Phone ?": {
      "main": [
        [
          {
            "node": "Prepend Title & Phone",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepend Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Title & Phone": {
      "main": [
        [
          {
            "node": "Has Incoming Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract VCard": {
      "main": [
        [
          {
            "node": "Get vCard Infos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXTRA": {
      "main": [
        [
          {
            "node": "PAYLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PAYLOAD": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has BASE64 Data": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Download Incoming",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Attachment": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          },
          {
            "node": "If Has BASE64 Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Thumbnail": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(Localization) Follow and Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 10,
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "pinData": {},
  "versionId": "8a098900-71c9-46fd-bcfb-85c6fd86ee7e",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ],
  "versao-qp": "3.25.524.0013",
  "Workflow-Nome": "PostToChatwoot"
}