{
  "createdAt": "2025-02-07T03:13:48.000Z",
  "updatedAt": "2025-02-07T03:13:48.000Z",
  "id": "mmNtXSzMoDrzZ3xI",
  "name": "My workflow",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -5740,
        740
      ],
      "id": "befe7508-6f69-4765-b6c9-401b04286f4d",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "content": "## (1.0.2) Updates\n* resolving and open by text comands\n",
        "height": 175.906164153499,
        "width": 398.976541038375
      },
      "id": "3f1a6039-951f-4324-851d-01840d7850b3",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5300,
        400
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "payload.id"
            }
          ]
        },
        "options": {}
      },
      "id": "05bf539b-c96a-4d46-80bd-1badfd0cfad5",
      "name": "Ordering Counter",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        -80,
        360
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "120c26bf-3002-470a-b1ad-57246c4ef844",
      "name": "Loop",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        480,
        280
      ]
    },
    {
      "parameters": {},
      "id": "7189e749-c2a9-4a4f-aebf-3da2b0e15d34",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3660,
        580
      ],
      "webhookId": "9061e7cf-a643-47a3-a036-15a7fc8cfc3c"
    },
    {
      "parameters": {},
      "id": "46ef5247-3057-4f35-aee9-9df080cf74c9",
      "name": "Next Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1740,
        620
      ]
    },
    {
      "parameters": {
        "content": "## Continue Session\n",
        "height": 432.6956237665846,
        "width": 1421.0604683933998
      },
      "id": "5fd22266-df1f-43f0-8391-4597151d30d2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2780,
        800
      ]
    },
    {
      "parameters": {
        "content": "## Start Session\n",
        "height": 575.8548488363981,
        "width": 1417.4486604344295
      },
      "id": "7b29937f-a8a4-4f8b-8cfc-2d791cce153c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2780,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "151225cf-4c88-44e3-956c-ef2616a93e25",
              "leftValue": "={{ $('TYPEBOT').item.json.token }}",
              "rightValue": "@broadcast",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "2be8f459-9b0c-4339-b6b5-31e1cd021cb7",
              "leftValue": "={{ $('TYPEBOT').item.json.bot }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "62a33e3c-dc6a-4999-8247-7d25771a523d",
      "name": "Is Valid Parameters ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -4800,
        740
      ]
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 278.9574374256098,
        "width": 388.46252278582097
      },
      "id": "0703c3f3-bf3d-4e02-8ba9-1ba3fdb99418",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4880,
        400
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "account",
              "value": "={{ $('EXTRA').item.json.account }}"
            },
            {
              "key": "inbox",
              "value": "={{ $('EXTRA').item.json.inbox }}"
            },
            {
              "key": "chat_id",
              "value": "={{ $('PAYLOAD').item.json.chat.id }}"
            },
            {
              "key": "message_id",
              "value": "={{ $('PAYLOAD').item.json.id }}"
            },
            {
              "key": "conversation_id",
              "value": "={{ $('PAYLOAD').item.json.conversation.id }}"
            },
            {
              "key": "typebot_status",
              "value": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_status ?? '' }}"
            },
            {
              "key": "typebot_session",
              "value": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_session ?? ''}}"
            },
            {
              "key": "typebot_bot",
              "value": "={{ $('TYPEBOT').item.json.bot }}"
            }
          ]
        }
      },
      "id": "dcee89bf-0614-4f88-865f-c814c86f92a0",
      "name": "Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -4740,
        480
      ],
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.extra }}",
        "options": {}
      },
      "id": "99e0b8e7-c66d-4d7e-879e-b86919796659",
      "name": "EXTRA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5340,
        740
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $('When Called By Another Workflow').item.json.removeField('extra') }}",
        "options": {}
      },
      "id": "d243d931-67f0-4d41-937c-83afe9ec7d9c",
      "name": "PAYLOAD",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4980,
        740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c3057e51-7ad1-4fec-9ed0-575c34ade027",
              "name": "token",
              "value": "={{ $env[\"C8Q_TYPEBOT_TOKEN\"]?.trim() }}",
              "type": "string"
            },
            {
              "id": "6d8094e6-38e0-4976-a55a-aee0df0b170d",
              "name": "host",
              "value": "={{ ($env[\"C8Q_TYPEBOT_HOST\"] ?? \"http://localhost:8080\").replace(/\\/*$/, '') }}",
              "type": "string"
            },
            {
              "id": "24b18c54-bc5e-48f5-b664-668bb23f37db",
              "name": "bot",
              "value": "={{ $('EXTRA').item.json.typebot?.trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4fa1112f-ec5e-42ed-87db-d3dd807b287a",
      "name": "TYPEBOT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5160,
        740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10ed9f6f-20ab-447c-8e65-3bd72b78342e",
              "name": "extra.utoken",
              "value": "={{ $json.extra.utoken ?? $env[\"C8Q_SUPERUSER_TOKEN\"] }}",
              "type": "string"
            },
            {
              "id": "6866905c-68b2-4d85-b448-527dd0d9650a",
              "name": "extra.atoken",
              "value": "={{ $json.extra.atoken ?? $env[\"C8Q_AGENT_TOKEN\"] }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "c9a17bbd-6c57-4722-ad7f-a1248eb15c1a",
      "name": "SuperUser & Agent",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5520,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "11227f50-6a0d-4c7b-a3d2-3114f507ca0b",
              "leftValue": "={{ $json.key }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f91a0eb9-60ae-476d-863e-6f141556e569",
      "name": "Is Key Empty?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -4420,
        720
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "key",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}",
        "options": {}
      },
      "id": "6e32df61-9ebf-4df3-93f7-08c4151a55db",
      "name": "Get Debouce on Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4220,
        640
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "key",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}",
        "options": {}
      },
      "id": "7b6fb58b-dece-441f-a075-e26ff72d0790",
      "name": "Get Typebot Session",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4600,
        720
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "d82d693e-b9d4-445f-bbb8-87c091bc7f03",
              "leftValue": "={{ $json.key }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ba58fa37-cb41-4a79-952a-55aeaa1afa12",
      "name": "Existe Key?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -4040,
        640
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}",
        "value": "={{$now.toMillis()}}",
        "keyType": "string",
        "expire": true,
        "ttl": 5
      },
      "id": "46502316-68e6-4d4e-a8f9-ed3782fe876e",
      "name": "Set Debounce Time Key",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3840,
        580
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "key",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}",
        "options": {}
      },
      "id": "5a06e7d1-c613-4908-b925-c4e0d57a5ef4",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3480,
        580
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "f4229894-5e81-49ee-9304-8e7b6c79b584",
              "leftValue": "={{ $json.key }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fe89c557-d7b2-48ff-8151-b0c56f8e9578",
      "name": "If4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -3300,
        580
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "payload",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "2ae828ff-0a8a-4b23-a314-de1a047dd76f",
      "name": "Split Itens to Send",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 1,
      "position": [
        -280,
        360
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "6b7ef73a-a97f-4ded-97d2-afb2d08be18d",
              "leftValue": "={{ $json.payload }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fbfb419a-78f7-47d6-bc23-11901df6f2e0",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -480,
        300
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$('EXTRA').item.json.qphost}}",
        "token": "={{$('EXTRA').item.json.qptoken}}",
        "method": "sendurl",
        "text": "=",
        "chatid": "={{ $('PAYLOAD').item.json.chat.id }}",
        "url": "={{ $json.payload.content }}",
        "filename": "={{ $json.payload.content.split('/').pop() }}",
        "filelength": 0
      },
      "id": "a29b1235-da68-4ff4-9769-4381025705b0",
      "name": "Quepasa Send Attach",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        1240,
        600
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e1d373c5-b778-4cdd-9722-35435f9b6534",
              "leftValue": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_session }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "96ae621c-a2d7-4fde-99c4-6884985dbf1b",
              "leftValue": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_status }}",
              "rightValue": "end",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "be816cc0-6944-4e84-bec9-0be93de56308",
              "leftValue": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_status }}",
              "rightValue": "error",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "86872b8f-e75d-47ae-9e64-0b898c726662",
      "name": "If Not Has Session Id ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3060,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "101ce665-4e37-43af-b825-1e20b55a7986",
              "leftValue": "={{ $('PAYLOAD').item.json.conversation?.custom_attributes?.typebot_status }}",
              "rightValue": "evaluating",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "32f0d56d-91d7-4e2a-8775-f3844d537351",
      "name": "If Need To Update Status ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2440,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "33d9fa7b-0b8d-48eb-9203-3a024fdd7b7d",
              "leftValue": "={{ $('PAYLOAD').item.json.conversation.status }}",
              "rightValue": "open",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3fa8f3fa-90ee-4e97-9c1d-3a95195eecc3",
      "name": "If Conversation Is Not Openned",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2900,
        840
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}"
      },
      "id": "b5d3f3f8-db0a-4c26-9a4a-f8eec0082cb8",
      "name": "Delete Typebot Session",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3040,
        360
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$('EXTRA').item.json.cwhost}}/api/v1/accounts/{{$('EXTRA').item.json.account}}/conversations/{{$('PAYLOAD').item.json.conversation.id}}/custom_attributes",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $json }}",
        "headerParametersJson": "={\"api_access_token\":\"{{$('EXTRA').item.json.utoken}}\"} ",
        "queryParametersJson": "{}"
      },
      "name": "Update Status For Conversation - start",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -1960,
        460
      ],
      "id": "20ee80c9-b32b-4551-9259-0ad8c6125062",
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$('EXTRA').item.json.cwhost}}/api/v1/accounts/{{$('EXTRA').item.json.account}}/conversations/{{$('PAYLOAD').item.json.conversation.id}}/custom_attributes",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $json }}",
        "headerParametersJson": "={\"api_access_token\":\"{{$('EXTRA').item.json.utoken}}\"} ",
        "queryParametersJson": "{}"
      },
      "name": "Update Status For Conversation - continue",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -2060,
        900
      ],
      "id": "c6c32006-ef3a-4b7c-8384-9981e24909f4",
      "retryOnFail": false,
      "maxTries": 2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "continue",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "90d04f12-ff3d-42fa-9bcf-2311190b9162",
      "name": "Set Continue Status Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2240,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "end",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2320b396-9239-401f-9f4d-6245c18cf9bc",
      "name": "Set End Status Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1c39df9d-151f-493f-a149-4ba481ba241e",
              "leftValue": "={{ $json.payload }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "d30d1488-7c34-4be4-8a85-b4ba56aec500",
              "leftValue": "={{ $json.input }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "547bfd02-66fb-4c7e-a364-991efd219614",
      "name": "If Empty Payload Item",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1240,
        840
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "typebot_session",
              "value": "={{ $json.sessionId ?? '' }}"
            },
            {
              "key": "typebot_status",
              "value": "start"
            }
          ]
        }
      },
      "id": "d207488c-56d3-4bde-841b-4aeaee57e181",
      "name": "Execution Data New Session",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -2540,
        580
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "start error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "edde48d9-2383-4dab-9bb8-a5f097d27cc8",
      "name": "Set Start Error Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        1520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "continue error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dfbb0be1-9182-40d3-85e5-8726561c3370",
      "name": "Set Continue Error Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        1720
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "empty error",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "de64bc75-efdb-4b0f-981b-e44f492882a6",
      "name": "Set Empty Error Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        1940
      ]
    },
    {
      "parameters": {},
      "id": "37d803a2-d4e2-4853-a9a4-83566b33a5fb",
      "name": "Process Errors",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2260,
        1720
      ]
    },
    {
      "parameters": {},
      "id": "776cb655-7372-40d8-b293-25d09264f934",
      "name": "Start Session - IN",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2720,
        580
      ]
    },
    {
      "parameters": {},
      "id": "bb084c4e-22a0-40e1-9f91-98db937f0eb6",
      "name": "Start Session - OUT",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1560,
        300
      ],
      "notesInFlow": false
    },
    {
      "parameters": {},
      "id": "db857ff2-125b-444b-b058-23a645671882",
      "name": "Continue Session - IN",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2660,
        1000
      ]
    },
    {
      "parameters": {},
      "id": "2aa70ab9-764d-4212-9421-780e8b8b7615",
      "name": "Continue Session - OUT",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1540,
        880
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=n8n:debounceStarted:{{$('PAYLOAD').item.json.conversation.id}}-{{$('EXTRA').item.json.account}}-{{$('EXTRA').item.json.inbox}}",
        "value": "={{ $json.sessionId }}",
        "keyType": "string"
      },
      "id": "801b7c2d-0894-4ef0-81b3-49177f094ec1",
      "name": "Set Debouce Started Key",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2140,
        280
      ],
      "credentials": {
        "redis": {
          "id": "aJWSRTMeuHsnr3Ll",
          "name": "Redis-TP"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "start",
              "type": "string"
            },
            {
              "id": "5f804ebb-155f-480d-a1ef-fb8465d7578d",
              "name": "custom_attributes.typebot_session",
              "value": "={{$json.sessionId}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6f9eafea-7404-4d53-829b-c9cab7966c66",
      "name": "Set Start Status Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2140,
        460
      ]
    },
    {
      "parameters": {},
      "id": "06821e2a-f334-4edf-aa3d-4ec98e574e2a",
      "name": "Process Payloads",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1120,
        680
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const payload = $input.item.json;\nconst input = Object.hasOwn(payload, \"input\");\nconst messages = payload.messages;\nlet idCounter = 1; // Variável para controlar o id\n\nconst msgItem = messages.map((message) => {\n  let contentText = '';\n\n  // Verifica se o tipo de mensagem é \"image\", \"audio\" ou \"video\"\n  if ([\"image\", \"audio\", \"video\"].includes(message.type)) {\n    contentText = message.content.url;\n  } else if (Array.isArray(message.content?.richText)) {\n    for (const richTextItem of message.content.richText) {\n      if (Array.isArray(richTextItem.children)) {\n        for (const child of richTextItem.children) {\n          if (child.type === \"inline-variable\") {\n            if (child.children && Array.isArray(child.children)) {\n              for (const inlineChild of child.children) {\n                if (inlineChild.text) {\n                  contentText += inlineChild.text.trim();\n                }\n              }\n            }\n          } else {\n            if (child.text) {\n              contentText += `${child.text.trim()} `;\n            }\n          }\n          if (child.children && Array.isArray(child.children)) {\n            for (const nestedChild of child.children) {\n              if (nestedChild.text) {\n                contentText += `${nestedChild.text.trim()} `;\n              }\n              if (nestedChild.children && Array.isArray(nestedChild.children)) {\n                for (const nestedNestedChild of nestedChild.children) {\n                  if (nestedNestedChild.text) {\n                    contentText += `${nestedNestedChild.text.trim()} `;\n                  }\n                  if (nestedNestedChild.children && Array.isArray(nestedNestedChild.children)) {\n                    for (const nestedNestedNestedChild of nestedNestedChild.children) {\n                      if (nestedNestedNestedChild.text) {\n                        contentText += `${nestedNestedNestedChild.text.trim()} `;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      contentText += \"\\n\"; // Adiciona uma quebra de linha após cada parágrafo\n    }\n  }\n\n  // Substitui \"Invalid message. Please, try again.\" por \"ERRO\"\n  if (contentText.trim() === \"Invalid message. Please, try again.\") {\n    contentText = \"Tipo de mensagem inválida!\";\n  }\n\n  // Filtra os itens do tipo 'wait' em clientSideActions\n  const waitActions = payload?.clientSideActions?.filter(action => action.type === 'wait') || [];\n\n  // Define o valor de secondsToWaitFor\n  const secondsToWaitFor = waitActions.length > 1 ? 0 : waitActions[0]?.wait?.secondsToWaitFor ?? null;\n\n  const newItem = {\n    id: idCounter++,\n    type: message.type,\n    content: contentText.trim(),\n    sessionId: payload.sessionId,\n    openchatwoot: payload?.clientSideActions?.some(objeto => objeto.hasOwnProperty('chatwoot')),\n    ...(idCounter === 1 && { secondsToWaitFor: secondsToWaitFor })\n};\n\n  return newItem;\n});\n\nreturn { \"input\": input, \"payload\": msgItem };\n"
      },
      "id": "fe5cda75-5ad4-49d0-8687-b2ca33e83810",
      "name": "Make Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -680,
        300
      ]
    },
    {
      "parameters": {
        "content": "## Errors\n",
        "height": 768.6054221850341,
        "width": 780.623269857243,
        "color": 3
      },
      "id": "c341092c-f52c-4587-afff-7b91f0a0da0f",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1740,
        1400
      ]
    },
    {
      "parameters": {
        "unit": "seconds"
      },
      "id": "ab567abd-f499-4838-8165-ff42fe0286f4",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1480,
        500
      ],
      "webhookId": "fcd2e4ee-0d8b-43cd-bb26-cc9e1a3e9c13"
    },
    {
      "parameters": {
        "baseUrl": "={{$('EXTRA').item.json.qphost}}",
        "token": "={{$('EXTRA').item.json.qptoken}}",
        "text": "={{ $json.payload.content }}",
        "chatid": "={{ $('PAYLOAD').item.json.chat.id }}",
        "filelength": 0
      },
      "id": "91acc262-a911-4dc3-bb6f-00ee005d0bed",
      "name": "Quepasa Send Text",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        1240,
        420
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.payload?.openchatwoot ?? false }}",
              "value2": true
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "337ed5d5-22ca-4e74-b204-1cce3b245640",
      "name": "Reach A ChatWoot Node ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1860,
        300
      ]
    },
    {
      "parameters": {
        "content": "## Open Conversation\n",
        "height": 358.7496340085681,
        "width": 752.0364364356966
      },
      "id": "2b0db9c9-a6e9-4ffb-a8d9-985de310cba9",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2620,
        700
      ]
    },
    {
      "parameters": {
        "content": "## Loop Multiple Messages Payloads\n",
        "height": 1069.4642583983118,
        "width": 2139.324203751877
      },
      "id": "1e11471e-581d-4edb-acdd-b22cb609ad88",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        40
      ]
    },
    {
      "parameters": {},
      "id": "98b6153e-7245-4c80-ab2d-d9ccf3bddb82",
      "name": "Go Loop",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        120,
        280
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$('EXTRA').item.json.cwhost}}/api/v1/accounts/{{$('EXTRA').item.json.account}}/conversations/{{$('PAYLOAD').item.json.conversation.id}}/custom_attributes",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $json }}",
        "headerParametersJson": "={\"api_access_token\":\"{{$('EXTRA').item.json.utoken}}\"}",
        "queryParametersJson": "{}"
      },
      "name": "Update Status For Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2840,
        360
      ],
      "id": "54068fac-f03f-4dba-91c0-07e1beaf99a2",
      "retryOnFail": true,
      "maxTries": 2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$('EXTRA').item.json.cwhost}}/api/v1/accounts/{{$('EXTRA').item.json.account}}/conversations/{{ $('PAYLOAD').item.json.conversation.id }}/toggle_status ",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{\"status\": \"open\"}",
        "headerParametersJson": "={\"api_access_token\":\"{{$('EXTRA').item.json.atoken}}\"}",
        "queryParametersJson": "{}"
      },
      "name": "Open Conversation in Chatwoot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        3160,
        820
      ],
      "id": "1e2414cf-9be2-4e16-b829-ed0ec74d19d9"
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "2e9ac8bb-b738-4017-bb96-cd4b89b6904f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1740,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('TYPEBOT').item.json.host }}/api/v1/typebots/{{ $('TYPEBOT').item.json.bot }}/startChat",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('TYPEBOT').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"message\": {\n      \"type\": \"text\",\n      \"text\": {{ JSON.stringify($('PAYLOAD').item.json.text) }}\n  },\n  \"prefilledVariables\": {\n    \"chat_id\": \"{{ $('PAYLOAD').item.json.chat.id }}\",\n    \"conversation_id\": \"{{ $('PAYLOAD').item.json.conversation.id }}\",\n    \"chat_title\": \"{{ $('PAYLOAD').item.json.chat.title }}\",\n    \"account_id\": {{$('EXTRA').item.json.account}},\n    \"inbox_id\": {{$('EXTRA').item.json.inbox}}    \n  }\n}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "039fac27-ed0c-413c-87ea-c0c4cff2586f",
      "name": "TB-START",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        -2360,
        580
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('TYPEBOT').item.json.host }}/api/v1/sessions/{{ $('PAYLOAD').item.json.conversation.custom_attributes.typebot_session }}/continueChat",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('TYPEBOT').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message",
              "value": "={{ $('PAYLOAD').item.json.text || \"null\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4b80cad4-f541-4ba9-a7ee-ae91b793315f",
      "name": "TB-CONTINUE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1840,
        1020
      ],
      "retryOnFail": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.payload.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0774cf5a-7901-4024-a325-0e0d05d2fcc4",
                    "leftValue": "={{ $json.payload.type }}",
                    "rightValue": "video|audio|image",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "attach"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "d3a7ee49-33bb-4f78-9249-4f837ad3c4b4",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        740,
        520
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$('EXTRA').item.json.cwhost}}/api/v1/accounts/{{$('EXTRA').item.json.account}}/conversations/{{ $('PAYLOAD').item.json.conversation.id }}/toggle_status ",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{\"status\": \"resolved\"}",
        "headerParametersJson": "={\"api_access_token\":\"{{$('EXTRA').item.json.atoken}}\"}",
        "queryParametersJson": "{}"
      },
      "name": "Resolve Conversation in Chatwoot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1860,
        100
      ],
      "id": "c221fb6b-a3a5-4a93-8863-47beae30c3ad"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.payload.content }}",
                    "rightValue": "/resolve",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "resolve"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dfb8fca6-f6eb-49a5-9922-528db0c0544e",
                    "leftValue": "={{ $json.payload.content }}",
                    "rightValue": "/open",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "open"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "b53ae226-6e7a-4cea-a5ad-ecb0f19c80e8",
      "name": "Switch Text Answer",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        960,
        400
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f1269b1f-aafa-4adc-8246-eadacdf284c6",
              "name": "custom_attributes",
              "value": "={{ $('PAYLOAD').item.json.conversation.custom_attributes }}",
              "type": "object"
            },
            {
              "id": "64c0aa8e-6a4e-4a4b-9b4c-02b9e78eb863",
              "name": "custom_attributes.typebot_status",
              "value": "terminate",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "88f7a7c3-2bd3-4236-9300-a43f74e506d6",
      "name": "Set Terminate Status Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2200,
        100
      ]
    }
  ],
  "connections": {
    "Ordering Counter": {
      "main": [
        [
          {
            "node": "Go Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop": {
      "main": [
        [],
        [
          {
            "node": "Reach A ChatWoot Node ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Next Message": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Valid Parameters ?": {
      "main": [
        [
          {
            "node": "Get Typebot Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXTRA": {
      "main": [
        [
          {
            "node": "TYPEBOT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PAYLOAD": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is Valid Parameters ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TYPEBOT": {
      "main": [
        [
          {
            "node": "PAYLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SuperUser & Agent": {
      "main": [
        [
          {
            "node": "EXTRA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Key Empty?": {
      "main": [
        [
          {
            "node": "Get Debouce on Redis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not Has Session Id ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Debouce on Redis": {
      "main": [
        [
          {
            "node": "Existe Key?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Typebot Session": {
      "main": [
        [
          {
            "node": "Is Key Empty?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Existe Key?": {
      "main": [
        [
          {
            "node": "Set Debounce Time Key",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Debounce Time Key": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [],
        [
          {
            "node": "If Not Has Session Id ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Itens to Send": {
      "main": [
        [
          {
            "node": "Ordering Counter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Go Loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Itens to Send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Attach": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Has Session Id ?": {
      "main": [
        [
          {
            "node": "Start Session - IN",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Continue Session - IN",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Need To Update Status ?": {
      "main": [
        [
          {
            "node": "Set Continue Status Parameters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "TB-CONTINUE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Is Not Openned": {
      "main": [
        [
          {
            "node": "Open Conversation in Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Status For Conversation - start": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Update Status For Conversation - continue": {
      "main": [
        [
          {
            "node": "TB-CONTINUE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Continue Status Parameters": {
      "main": [
        [
          {
            "node": "Update Status For Conversation - continue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set End Status Parameters": {
      "main": [
        [
          {
            "node": "Update Status For Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Conversation Is Not Openned",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Empty Payload Item": {
      "main": [
        [
          {
            "node": "Set Empty Error Parameters",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data New Session": {
      "main": [
        [
          {
            "node": "TB-START",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Start Error Parameters": {
      "main": [
        [
          {
            "node": "Process Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Continue Error Parameters": {
      "main": [
        [
          {
            "node": "Process Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Empty Error Parameters": {
      "main": [
        [
          {
            "node": "Process Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Errors": {
      "main": [
        [
          {
            "node": "Update Status For Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Conversation Is Not Openned",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Session - IN": {
      "main": [
        [
          {
            "node": "Execution Data New Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Session - OUT": {
      "main": [
        [
          {
            "node": "Process Payloads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue Session - IN": {
      "main": [
        [
          {
            "node": "If Need To Update Status ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Continue Session - OUT": {
      "main": [
        [
          {
            "node": "Process Payloads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Debouce Started Key": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Start Status Parameters": {
      "main": [
        [
          {
            "node": "Update Status For Conversation - start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Payloads": {
      "main": [
        [
          {
            "node": "Make Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Payload": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Next Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Text": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reach A ChatWoot Node ?": {
      "main": [
        [
          {
            "node": "Set End Status Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go Loop": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Status For Conversation": {
      "main": [
        [
          {
            "node": "Delete Typebot Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Start Session - OUT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TB-START": {
      "main": [
        [
          {
            "node": "Set Start Status Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Debouce Started Key",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Start Error Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TB-CONTINUE": {
      "main": [
        [
          {
            "node": "Continue Session - OUT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Continue Error Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Switch Text Answer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Empty Payload Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resolve Conversation in Chatwoot": {
      "main": [
        [
          {
            "node": "Set Terminate Status Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Text Answer": {
      "main": [
        [
          {
            "node": "Resolve Conversation in Chatwoot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Conversation Is Not Openned",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Status For Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Terminate Status Parameters": {
      "main": [
        [
          {
            "node": "Update Status For Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "SuperUser & Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "c6168b6e-c1a3-46d6-9148-c1d3a5cffdf0",
  "triggerCount": 0,
  "tags": [],
  "versao-qp": "updating-2",
  "Workflow-Nome": "My workflow"
}