{
  "createdAt": "2024-04-24T01:25:11.568Z",
  "updatedAt": "2024-05-28T00:27:35.775Z",
  "id": "1001",
  "name": "QuepasaInboxControl",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "resource": "webhook",
        "operation": "setup",
        "url": "={{ $json.extra.n8nhost?.replace(/\\/+$/, '') ?? \"https://\" + $json.headers.host }}/webhook/to-chatwoot",
        "trackId": "chatwoot",
        "extraAttributes": {
          "attribute": [
            {
              "key": "identifier",
              "value": "={{$json.extra.identifier}}"
            },
            {
              "key": "cwhost",
              "value": "={{$json.extra.cwhost}}"
            },
            {
              "key": "inbox",
              "value": "={{$json.extra.inbox}}"
            },
            {
              "key": "account",
              "value": "={{$json[\"body\"][\"account\"][\"id\"]}}"
            },
            {
              "key": "utoken",
              "value": "={{$json.extra.utoken}}"
            },
            {
              "key": "atoken",
              "value": "={{$json.extra.atoken}}"
            },
            {
              "key": "account",
              "value": "={{$json.extra.account}}"
            },
            {
              "key": "qphost",
              "value": "={{$json.extra.qphost}}"
            },
            {
              "key": "qptoken",
              "value": "={{$json.extra.qptoken}}"
            },
            {
              "key": "singlethread",
              "value": "={{ ($json.query.st ?? $json.query.singlethread) ? true : undefined }}"
            },
            {
              "key": "soc",
              "value": "={{ $json.query.soc }}"
            }
          ]
        }
      },
      "id": "302d7b21-6e96-46ab-b6f4-37e10cfe22d7",
      "name": "QP - Webhook Update",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        5320,
        760
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "resource": "webhook",
        "operation": "remove",
        "url": "=https://{{$json[\"headers\"][\"host\"]}}/webhook/to-chatwoot"
      },
      "id": "3629e6a2-a0a4-474e-8bb1-ee64d37b0bbc",
      "name": "QP - Webhook Remove",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        5320,
        920
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.content?.toLowerCase() ?? \"\"}}",
        "rules": {
          "rules": [
            {
              "operation": "startsWith",
              "value2": "/webhook update"
            },
            {
              "operation": "startsWith",
              "value2": "/webhook remove",
              "output": 1
            },
            {
              "operation": "startsWith",
              "value2": "/webhook clear",
              "output": 2
            }
          ]
        }
      },
      "id": "d944a417-1ad0-4291-9fa1-564ccd512ec0",
      "name": "Webhook Methods",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        4940,
        920
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{ $json.extra.cwhost }}",
        "sourceId": "={{ $json.params.source_id }}",
        "operation": "messageCreate",
        "inboxIdentifier": "={{ $json.extra.identifier }}",
        "conversationId": "={{ $json.params.conversation_id }}",
        "content": "={{$json[\"response\"]}}"
      },
      "id": "dc261c0e-2f55-442b-887b-e8389d1ea1e5",
      "name": "ChatWoot",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        8980,
        720
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=({{$json[\"success\"]}}): {{$json[\"status\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "2ccad1d3-4016-4a72-b356-5432f6765bbb",
      "name": "Set Response From Quepasa",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6200,
        800
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=!Invalid call, try:\n-----------------------------------------------\n/agentbot\n/info\n/webcallback {destination}\n/webhook {update|remove|clear}\n"
            }
          ]
        },
        "options": {}
      },
      "id": "f372c8cf-c4de-4a6f-a787-21609f830b7d",
      "name": "Set Response From Invalid Start",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6240,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body?.event}}",
              "value2": "message_created"
            },
            {
              "value1": "={{$json.body?.message_type}}",
              "value2": "outgoing"
            }
          ]
        }
      },
      "id": "2c00144a-39a7-4e36-ba90-b4eb3848bc8e",
      "name": "If Message Out",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1480,
        840
      ]
    },
    {
      "parameters": {},
      "id": "e03e2430-1182-49b5-a15e-69a6bb03f755",
      "name": "Discarding Not Message Out",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1680,
        980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.success}}",
              "value2": true
            }
          ]
        }
      },
      "id": "0d2cb7b7-9a58-4fda-a42e-72c276f68d75",
      "name": "IF Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5960,
        940
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=! {{ $json.status ?? $json.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3ba5a942-d846-4d63-997b-0c2b60d33f46",
      "name": "Set Error Response From Quepasa",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6200,
        1100
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "resource": "information"
      },
      "id": "9cd4d18d-823c-4b06-854e-de876fa951bd",
      "name": "QP - Info",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        5320,
        1340
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.success}}",
              "value2": true
            }
          ]
        }
      },
      "id": "dbe75290-1a6c-4390-ae53-5b2f7bb19c5b",
      "name": "IF Success1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5580,
        1340
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "={{$json[\"server\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "c63bfdb2-525d-4099-8ee0-f077507ad6ed",
      "name": "Set Info Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6200,
        1360
      ]
    },
    {
      "parameters": {
        "functionCode": "function print(object, level) {\n    var SPACER = '-',\n        NEWLINE = '\\r\\n'\n        result = '';\n\n    level = level || 0;\n    Object.keys(object).forEach(function (key) {\n        var i = level;\n        while (i--) {\n            result += SPACER;\n        }\n        if (typeof object[key] === 'object' && object[key] !== null) {\n            result += NEWLINE + key + ' :: ' + NEWLINE + NEWLINE;\n            result += print(object[key], level + 1);\n            return;\n        }\n        result += key + ': ' + object[key] + NEWLINE;\n\n    });\n    return result;\n}\n\nfor (item of items) {\n  item.json.server = print(item.json.server);\n}\n\nreturn items;"
      },
      "id": "af19a549-1012-4d58-ab14-17790a4eba6f",
      "name": "Json To Idented Text",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        5880,
        1320
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "resource": "webhook",
        "operation": "clear"
      },
      "id": "740f5e3e-7266-44f9-86d8-a5f7215dbe9d",
      "name": "QP - Webhook Clear",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        5320,
        1080
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "params.source_id",
              "value": "={{$json[\"body\"][\"conversation\"][\"contact_inbox\"][\"source_id\"]}}"
            },
            {
              "name": "params.conversation_id",
              "value": "={{$json[\"body\"][\"conversation\"][\"id\"]}}"
            }
          ]
        },
        "options": {}
      },
      "id": "7f20a887-15ab-49dd-93fc-e5e4f71ea28c",
      "name": "Set Parameters From Control Chat",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3640,
        420
      ]
    },
    {
      "parameters": {},
      "id": "ca7cff63-901c-443b-93e2-58d275a2555c",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5040,
        3320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.response}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "394be812-1e1e-481d-9ef7-72e7b5c6de71",
      "name": "If Reponse Not Empty ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6820,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.content}}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{$json.content}}",
              "operation": "notStartsWith",
              "value2": "/qrcode"
            }
          ]
        }
      },
      "id": "4d9cda94-2f4a-4d21-a3bd-9d1e5e86eed1",
      "name": "If Body Not Empty",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2080,
        800
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "content",
              "value": "={{$json.body?.content}}"
            },
            {
              "name": "cwhost",
              "value": "={{$json.extra.cwhost}}"
            },
            {
              "name": "account",
              "value": "={{$json.extra.account}}"
            },
            {
              "name": "inbox",
              "value": "={{$json.extra.inbox}}"
            },
            {
              "name": "utoken",
              "value": "={{$json.extra.utoken}}"
            }
          ]
        },
        "options": {}
      },
      "id": "f62ee3b0-7012-4b1a-b8f5-1db3aa36a046",
      "name": "Set Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1900,
        800
      ]
    },
    {
      "parameters": {},
      "id": "90453381-fcbe-4f53-a4c0-3d87b49150c8",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1280,
        840
      ]
    },
    {
      "parameters": {},
      "id": "8d8989d8-b300-49d2-93f5-2152b333f294",
      "name": "Agent Control",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5220,
        1600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/inboxes/{{$json.extra.inbox}}/set_agent_bot",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{$json.extra.utoken}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "agent_bot",
              "value": "1"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "id": "f96c0836-0be1-4773-a29c-a55cfddb9b9e",
      "name": "(Agent) Set Inbox Agent Permissions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        5480,
        1760
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.error?.message??$json?.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "c52e998f-0c75-4d81-835f-b104c5c8fc15",
      "name": "(Agent) If Success Set Agent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5680,
        1760
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "Agent Bot Updated"
            }
          ]
        },
        "options": {}
      },
      "id": "ca5a3b34-fd04-4447-b135-4fa133811683",
      "name": "(Agent)  Set Sucess Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5880,
        1640
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=! {{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "70caa226-2501-417a-af3b-4ebc5812add8",
      "name": "(Agent) Set Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5880,
        1860
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "6ed52228-5231-49f1-9e00-fa6a820e0ebc",
      "name": "(Agent) Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        6200,
        1620
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.content?.toLowerCase() ?? \"\"}}",
        "rules": {
          "rules": [
            {
              "operation": "startsWith",
              "value2": "/webcallback"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "id": "f349247f-ca49-4ee9-b053-2ebd6d82a50b",
      "name": "Switch Start1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        4820,
        2940
      ]
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "https://endpoints.sufficit.com.br/gateway/chatwoot/inbox",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "identifier",
              "value": "={{ $json.extra.identifier }}"
            },
            {
              "name": "destination",
              "value": "={{ $json.content.substring(13) }}"
            },
            {
              "name": "contextid",
              "value": "={{ $env[\"C8Q_SUFFICIT_CONTEXTID\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "229e3d5f-b4bf-4aa7-b5a2-f1f19e294bdd",
      "name": "Update WebCallBack Destination",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5480,
        2620
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "https://endpoints.sufficit.com.br/gateway/chatwoot/inbox",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "identifier",
              "value": "={{ $json.extra.identifier }}"
            },
            {
              "name": "contextId",
              "value": "={{ $json.content.substring(13) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6292dcb4-67b0-4352-8290-f1c6b4b76718",
      "name": "Update WebCallBack ContextId",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5480,
        2800
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.content.substring(13) }}",
              "operation": "startsWith",
              "value2": "+"
            }
          ]
        }
      },
      "id": "4348108a-e521-46be-86ab-fdb3d8e76f18",
      "name": "If Destination Or ContextId",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5280,
        2700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.success }}",
              "value2": true
            }
          ]
        }
      },
      "id": "5695e5a4-d849-44db-852d-c6d2f4c84d9a",
      "name": "If Success Update",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5680,
        2700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "={{ $json.message }}:\n  * identifier: {{ $json.data?.identifier }}\n  * destination: {{ $json.data?.destination }}\n  * contextId: {{ $json.data?.contextId }}\n\n--------------------------------------\nFor more informations, check:\n*** https://www.sufficit.com.br/gateway/chatwoot/default?objectid={{ $json.data?.contextId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b03f3721-ae4b-4884-9a57-3c545954826c",
      "name": "Set Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5880,
        2600
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=! {{ $json.message ?? $json.error.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c048914e-007f-4f05-be0c-c09f04c5c82d",
      "name": "Set Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5880,
        2800
      ]
    },
    {
      "parameters": {},
      "id": "4bb878da-e0ad-4783-8684-628aeaa527ac",
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6080,
        2700
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.9) Updates\n* added soc extra variable\n\n## Recommendations \n* Remember set timeout to 15 seconds \n* string empty for switch\n* getting identifier from postgres",
        "height": 221.8901373993275,
        "width": 444.914796845942
      },
      "id": "e51d90e3-afdd-4a3d-bf42-628a79b55336",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1140,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.extra.identifier}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "3f1875ea-99ca-499c-84ae-1876b0a890cf",
      "name": "If Missing Identifier",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2280,
        780
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \"public\".\"channel_api\".\"identifier\", \"public\".\"inboxes\".\"channel_id\" FROM \"public\".\"channel_api\" INNER JOIN \"public\".\"inboxes\" ON \"public\".\"channel_api\".\"id\" = \"public\".\"inboxes\".\"channel_id\" WHERE \"public\".\"channel_api\".\"account_id\"='{{$json.extra.account}}' AND \"public\".\"inboxes\".\"id\" = '{{$json.extra.inbox}}';",
        "additionalFields": {}
      },
      "id": "784f6dcb-0faa-4b55-aff3-8dc07713f216",
      "name": "Get Identifier",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        2480,
        660
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "NSSYN4EOlkv5kmYY",
          "name": "DB_CHATWOOT"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "04084c6d-c28d-4e0f-aeb1-c02a0c89e88e",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2800,
        740
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra.identifier",
              "value": "={{ $json.identifier }}"
            }
          ]
        },
        "options": {}
      },
      "id": "84114fbd-b7de-446f-8037-4363fba877c5",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2640,
        660
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "params",
              "value": "={{ $json.params }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.query.cwhost ?? $json.extra.cwhost }}"
            },
            {
              "name": "extra.identifier",
              "value": "={{ $json.query.identifier ?? $json.extra.identifier }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6192ae1b-9839-4440-ac70-4ebf50cb89e0",
      "name": "Set Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8280,
        420
      ]
    },
    {
      "parameters": {},
      "id": "81cee65c-3c3b-4b09-983f-34c310a70409",
      "name": "Follow To Main Flow",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8300,
        1080
      ]
    },
    {
      "parameters": {
        "content": "## Main Flow\n",
        "height": 577.449009853676,
        "width": 2082.865769000268
      },
      "id": "0dbb6356-e1a5-4e2f-83d7-50a1ad9b1842",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1143.6227296601246,
        580
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "b7d88acc-629f-4710-a621-6e656b6ef364",
      "name": "Merge Parameters",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        8760,
        720
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qphost",
              "value": "={{$json.extra.qphost ?? $json.query.qphost}}"
            },
            {
              "name": "extra.qptoken",
              "value": "={{$json.extra.qptoken ?? $json.query.qptoken ?? $json.extra.identifier ?? $json.query.identifier}}"
            }
          ]
        },
        "options": {}
      },
      "id": "23a2acbe-e5a4-457e-a203-0b69deba6825",
      "name": "Set Extra Payload Adjusts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3000,
        800
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const item = $input.item.json;\nconst content = item.body?.content;\nif (content) {\n  item.command = content.trim().toLowerCase().split(' ').shift();\n  if (item.command)\n  {\n    item.arguments = content.substring(item.command.length+1)\n    if (item.command.startsWith('/')) { \n      item.command = item.command.substring(1);\n    }\n  }\n}\nreturn $input.item;"
      },
      "id": "861145ba-5604-493f-8fe0-3d93c13ee296",
      "name": "Command & Arguments",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3180,
        800
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.command}}",
                    "rightValue": "webhook",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "webhook"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "f7f91a20-b86f-4307-96dd-93f169eacc8d",
                    "leftValue": "={{$json.command}}",
                    "rightValue": "=info",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "info"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "08ec1e52-ab50-4c59-abe9-501811ebc270",
                    "leftValue": "={{$json.command}}",
                    "rightValue": "=agentbot",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "agentbot"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "b3cb020e-ae4b-4116-ad4d-80d38ec11748",
                    "leftValue": "={{$json.command}}",
                    "rightValue": "=toggle",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "toggle"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "45107e23-afce-41a0-9891-0acbfbc0e7c3",
                    "leftValue": "={{$json.command}}",
                    "rightValue": "=webcallback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "webcallback"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "bf11af4c-220b-4b57-8e70-25831ea18c3c",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3640,
        1200
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "=!Invalid call, try:\n-----------------------------------------------\n/toggle groups\n/toggle broadcasts\n/toggle readreceipts\n/toggle calls"
            }
          ]
        },
        "options": {}
      },
      "id": "732addbe-1f26-4b42-8be4-6e1c63ad6a64",
      "name": "Set Response From Invalid Toggle",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5240,
        2540
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{$json.extra.qphost}}/info",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-QUEPASA-TOKEN",
              "value": "={{$json.extra.qptoken}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "groups",
              "value": "={{ $json.arguments.split(' ').pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "488a0b5e-3ae0-4b56-a431-cec22b856e05",
      "name": "Request Toggle Groups",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5240,
        1980
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.arguments}}",
                    "rightValue": "groups",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "groups"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4b5810d9-3ae4-4c88-b295-45188a7b3c4c",
                    "leftValue": "={{$json.arguments}}",
                    "rightValue": "=broadcasts",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "broadcasts"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "31ab53ad-575a-428c-ae6f-bf7d31cc6051",
                    "leftValue": "={{$json.arguments}}",
                    "rightValue": "=readreceipts",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "readreceipts"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "a6290151-1e97-4077-94db-2915a00481d7",
                    "leftValue": "={{$json.arguments}}",
                    "rightValue": "=calls",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "calls"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "699f091b-13f0-4d32-a273-568f56305dc8",
      "name": "Switch Toggle",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        4920,
        2220
      ]
    },
    {
      "parameters": {},
      "id": "08ef875f-afc4-4e6e-9e9a-2d815f1e99d7",
      "name": "Toggle NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5660,
        2100
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{$json.extra.qphost}}/info",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-QUEPASA-TOKEN",
              "value": "={{$json.extra.qptoken}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "calls",
              "value": "={{ $json.arguments.split(' ').pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "aebca58c-dd4c-487d-911e-f75514e57b6a",
      "name": "Request Toggle Calls",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5240,
        2400
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{$json.extra.qphost}}/info",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-QUEPASA-TOKEN",
              "value": "={{$json.extra.qptoken}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "broadcasts",
              "value": "={{ $json.arguments.split(' ').pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c0a04379-059b-46a5-8a96-7a76325fd369",
      "name": "Request Toggle Broadcasts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5240,
        2120
      ]
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "={{$json.extra.qphost}}/info",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-QUEPASA-TOKEN",
              "value": "={{$json.extra.qptoken}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "readreceipts",
              "value": "={{ $json.arguments.split(' ').pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "65712a2e-ad6d-4a9f-a9b2-0dd2580e50d8",
      "name": "Request Toggle ReadReceipts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5240,
        2260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "8bbf374d-0fc2-4f4c-afc4-8ebdd1551e6d",
              "leftValue": "={{ $json.body?.content_attributes?.automation_rule_id }}",
              "rightValue": "=",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "cbfc44e3-7b0d-451c-8131-ecad08ad1239",
      "name": "If Not From Automations",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1680,
        820
      ]
    }
  ],
  "connections": {
    "Webhook Methods": {
      "main": [
        [
          {
            "node": "QP - Webhook Update",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "QP - Webhook Remove",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "QP - Webhook Clear",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QP - Webhook Update": {
      "main": [
        [
          {
            "node": "IF Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QP - Webhook Remove": {
      "main": [
        [
          {
            "node": "IF Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Response From Quepasa": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Response From Invalid Start": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Message Out": {
      "main": [
        [
          {
            "node": "If Not From Automations",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Discarding Not Message Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Success": {
      "main": [
        [
          {
            "node": "Set Response From Quepasa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Error Response From Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Error Response From Quepasa": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QP - Info": {
      "main": [
        [
          {
            "node": "IF Success1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Success1": {
      "main": [
        [
          {
            "node": "Json To Idented Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Error Response From Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Info Response": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json To Idented Text": {
      "main": [
        [
          {
            "node": "Set Info Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "QP - Webhook Clear": {
      "main": [
        [
          {
            "node": "IF Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Set Response From Invalid Start",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Reponse Not Empty ?": {
      "main": [
        [
          {
            "node": "Follow To Main Flow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Body Not Empty": {
      "main": [
        [
          {
            "node": "If Missing Identifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Payload": {
      "main": [
        [
          {
            "node": "If Body Not Empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "If Message Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent Control": {
      "main": [
        [
          {
            "node": "(Agent) Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "(Agent) Set Inbox Agent Permissions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Agent) Set Inbox Agent Permissions": {
      "main": [
        [
          {
            "node": "(Agent) If Success Set Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Agent) If Success Set Agent": {
      "main": [
        [
          {
            "node": "(Agent)  Set Sucess Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(Agent) Set Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Agent)  Set Sucess Response": {
      "main": [
        [
          {
            "node": "(Agent) Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "(Agent) Set Error Response": {
      "main": [
        [
          {
            "node": "(Agent) Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "(Agent) Merge": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Start1": {
      "main": [
        [
          {
            "node": "If Destination Or ContextId",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update WebCallBack Destination": {
      "main": [
        [
          {
            "node": "If Success Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update WebCallBack ContextId": {
      "main": [
        [
          {
            "node": "If Success Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Destination Or ContextId": {
      "main": [
        [
          {
            "node": "Update WebCallBack Destination",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update WebCallBack ContextId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Success Update": {
      "main": [
        [
          {
            "node": "Set Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Success Response": {
      "main": [
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Error Response": {
      "main": [
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp1": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Missing Identifier": {
      "main": [
        [
          {
            "node": "Get Identifier",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Set Extra Payload Adjusts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Identifier": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Set Extra Payload Adjusts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Parameters From Control Chat": {
      "main": [
        [
          {
            "node": "Set Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow To Main Flow": {
      "main": [
        [
          {
            "node": "Merge Parameters",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Parameters": {
      "main": [
        [
          {
            "node": "ChatWoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Parameters": {
      "main": [
        [
          {
            "node": "Merge Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Extra Payload Adjusts": {
      "main": [
        [
          {
            "node": "Command & Arguments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Command & Arguments": {
      "main": [
        [
          {
            "node": "Set Parameters From Control Chat",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Webhook Methods",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "QP - Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agent Control",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Toggle",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Start1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Response From Invalid Toggle": {
      "main": [
        [
          {
            "node": "If Reponse Not Empty ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Toggle Groups": {
      "main": [
        [
          {
            "node": "Toggle NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Toggle": {
      "main": [
        [
          {
            "node": "Request Toggle Groups",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Toggle Broadcasts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Toggle ReadReceipts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Request Toggle Calls",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Response From Invalid Toggle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Toggle NoOp": {
      "main": [
        [
          {
            "node": "IF Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Toggle Calls": {
      "main": [
        [
          {
            "node": "Toggle NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Toggle Broadcasts": {
      "main": [
        [
          {
            "node": "Toggle NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request Toggle ReadReceipts": {
      "main": [
        [
          {
            "node": "Toggle NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not From Automations": {
      "main": [
        [
          {
            "node": "Set Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 15,
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "pinData": {},
  "versionId": "270e572c-75d9-4d39-8bb1-41940a524f2a",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2022-10-13T15:26:11.519Z",
      "updatedAt": "2023-08-25T18:50:53.269Z",
      "id": "5",
      "name": "quepasa"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ],
  "NOME": "QuepasaInboxControl"
}