{
  "createdAt": "2025-02-07T01:25:28.896Z",
  "updatedAt": "2025-06-04T02:16:56.159Z",
  "id": "1002",
  "name": "GetChatwootContacts",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{ $json.extra.utoken }}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}"
      },
      "id": "d86bf379-2686-4a84-bbac-23bd680ce60a",
      "name": "Create Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        3420,
        620
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "edb9fd30-d94d-4bdc-9032-b2327d99da52",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        740,
        540
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GROUP)')) {\n            body.chat.title = body.chat.title + ' (GROUP)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GROUP)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "e8010eb9-0e3a-4cc5-ac19-a3fb9e6be347",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        940,
        540
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra ?? $json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "synopsis",
              "value": "={{$json.body.synopsis}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            },
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            },
            {
              "name": "edited",
              "value": "={{$json.body.edited}}"
            }
          ]
        },
        "options": {}
      },
      "id": "662a6196-070e-49b3-9ae9-ff686bd3d8d2",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        380,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.chat?.chatwoot?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "4df63ef5-0677-4ce3-94d2-7b0147b3d369",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3040,
        460
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 847.6671229170042,
        "width": 3756.8229819799326
      },
      "id": "41c28634-5f54-4e94-8110-1bf2165d132f",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1300,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "a76278f1-f9fc-4148-9fe5-3d57ca31e0b5",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4200,
        380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload}}",
              "operation": "isNotEmpty"
            },
            {
              "value1": "={{$json.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "62a41b7b-1c8d-4de8-acd0-2041bf67059e",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3800,
        560
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "e8fc4cef-553f-4285-86b6-fa6ffc00ee78",
      "name": "Wait a while (5s)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4200,
        640
      ],
      "webhookId": "57209d6b-e7a6-4d78-b55c-82f677b13d42"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            },
            {
              "name": "payload",
              "value": "={{ undefined }}"
            }
          ],
          "number": [
            {
              "name": "attempts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set SourceId and PayloadId",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3220,
        380
      ],
      "id": "5884c502-fff8-458d-a0cc-822cb65927c1"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{ $json.payload.contact_inbox.source_id ?? undefined }}"
            },
            {
              "name": "payload",
              "value": "={{ undefined }}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{ $json.payload.contact.id }}"
            },
            {
              "name": "attempts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Created Chat Contact Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4000,
        480
      ],
      "id": "681fcb0e-ead9-4b64-80d9-762fdbef92bc"
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ],
          "string": [
            {
              "name": "error",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1adae59c-bf74-42e2-a52d-bbca4c22a556",
      "name": "Set Increment For Chat Contact Attempt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1400,
        460
      ]
    },
    {
      "parameters": {},
      "id": "e9e57594-c8fb-41a4-a10c-c57ba08459d6",
      "name": "Retry To Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4420,
        820
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{ $json.ctid }}"
            }
          ],
          "boolean": [
            {
              "name": "chat.chatwoot.skipgreetings",
              "value": "={{ $json.ctatts?.skipgreetings ?? false }}"
            },
            {
              "name": "chat.chatwoot.skipcontact",
              "value": "={{ $json.ctatts?.skipcontact ?? false }}"
            },
            {
              "name": "chat.chatwoot.skipevaluation",
              "value": "={{ $json.ctatts?.skipevaluation ?? false }}"
            },
            {
              "name": "chat.chatwoot.skipaudiotranscript",
              "value": "={{ $json.ctatts?.skipaudiotranscript ?? false }}"
            }
          ],
          "string": [
            {
              "name": "contact.custom_attributes",
              "value": "={{ $json.ctatts }}"
            },
            {
              "name": "ctid",
              "value": "={{ undefined }}"
            },
            {
              "name": "ctatts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set ContactId Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2840,
        460
      ],
      "id": "0d240e91-9154-4733-8eb6-37a555aab8e3"
    },
    {
      "parameters": {
        "content": "## (1.0.17) Updates\n* forwarding all contact custom_attributes\n\n## Recommendations \n* Remember set timeout to 20 seconds",
        "height": 201.45401153644474,
        "width": 467.54452018877896
      },
      "id": "bf64b54f-eb5c-4798-8dda-b4bb9d28ceaa",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        100
      ]
    },
    {
      "parameters": {},
      "id": "2f4ef8c2-fe7b-420d-9e16-3e293890b4d4",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -100,
        440
      ]
    },
    {
      "parameters": {},
      "id": "7c76b31a-4ba4-4331-b52c-f0e68a38655e",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3220,
        540
      ]
    },
    {
      "parameters": {},
      "id": "df9a3431-b5ed-4279-b509-dd0dbf9a61d0",
      "name": "Return Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4740,
        460
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "730b2bef-b3ac-4a9a-a4d6-b15d879a9f30",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1140,
        460
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "6ceb2284-ae63-487d-a41c-caabb41a5457",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3620,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error ?? \"\" }}",
              "operation": "contains",
              "value2": "process"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "value2": 2
            }
          ]
        }
      },
      "id": "0cb2df19-941f-4606-848d-7f5d53fa5c6a",
      "name": "If Error 422 & Has Attempts Remaning ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4000,
        660
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id as ctid, custom_attributes as ctatts FROM contacts WHERE account_id = '{{ $json.extra.account }}' AND identifier = '{{ $json.chat.id }}'",
        "additionalFields": {}
      },
      "id": "f3b04a33-377a-457f-b290-3d1612565c50",
      "name": "Get Contact Data By Identifier",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1560,
        560
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id as ctid, custom_attributes as ctatts FROM contacts WHERE account_id = '{{ $json.extra.account }}' AND phone_number = '{{ $json.chat.phone }}' limit 1",
        "additionalFields": {}
      },
      "id": "44e8de2d-723f-4f43-8e0d-6eec22ba90f5",
      "name": "Get Contact Data By Phone",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        2300,
        640
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.ctid }}",
              "operation": "isNotEmpty"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "1fdbfe8c-5142-442e-9358-8a0c8685404a",
      "name": "If Identifier Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1920,
        480
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "6dce36d0-cc25-46b4-a2d6-8cf4a90cc464",
      "name": "Merge Extra With Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1740,
        480
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "56496c4c-87f0-494c-860b-01edfa1562a7",
      "name": "Merge Extra With Phone",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2480,
        580
      ],
      "notesInFlow": false
    },
    {
      "parameters": {},
      "id": "fa485aa6-b330-4c21-ad8b-995c89773415",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2660,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.chat.phone }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "9dafc125-1f49-4b2b-95cb-1d814218b423",
      "name": "If Has No Phone ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2120,
        540
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost ?? \"http://127.0.0.1:31000\" }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.extra.cwhost ?? \"http://127.0.0.1:3000\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8c18b4be-1821-427f-a652-cff8450b236b",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        540,
        440
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "account",
              "value": "={{ $json.extra.account }}"
            },
            {
              "key": "inbox",
              "value": "={{ $json.extra.inbox }}"
            },
            {
              "key": "chatid",
              "value": "={{ $json.body.chat.id }}"
            }
          ]
        }
      },
      "id": "2f905f38-038b-4d09-a680-72ce7c679e09",
      "name": "Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        380,
        180
      ],
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 278.9574374256098,
        "width": 388.46252278582097
      },
      "id": "1451ec41-a5a6-41a6-9cce-a0de37048763",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        240,
        100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "28dc9773-c7a7-4d92-8a17-334b0c5e7e04",
              "leftValue": "={{ $json.chat?.chatwoot?.skipcontact ?? false }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "02bf9dd0-9593-410d-b65d-083d2ffe8b49",
      "name": "If Skip Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4440,
        360
      ]
    },
    {
      "parameters": {
        "errorMessage": "Error on create contact (expected 422)"
      },
      "id": "d7ca3cb2-e873-429a-b19c-90811afb2478",
      "name": "! Unknown Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4200,
        820
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "094951ed-b013-4b7f-91c4-e9717f5dc92a",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4440,
        540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5699ac0e-3d5d-4d5d-9f67-0dff8b7b1c41",
              "name": "error",
              "value": "skipped contact by parameter",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "95e3d1d6-07e9-4a2e-bdcd-126c5cea0609",
      "name": "Skipped",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4740,
        260
      ]
    }
  ],
  "connections": {
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set SourceId and PayloadId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "If Skip Contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Set Created Chat Contact Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Error 422 & Has Attempts Remaning ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SourceId and PayloadId": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Created Chat Contact Info": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s)": {
      "main": [
        [
          {
            "node": "Retry To Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Chat Contact Attempt": {
      "main": [
        [
          {
            "node": "Merge Extra With Id",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Contact Data By Identifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry To Chat Contact": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set ContactId Payload": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Error 422 & Has Attempts Remaning ?": {
      "main": [
        [
          {
            "node": "Wait a while (5s)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "! Unknown Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contact Data By Identifier": {
      "main": [
        [
          {
            "node": "Merge Extra With Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Contact Data By Phone": {
      "main": [
        [
          {
            "node": "Merge Extra With Phone",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Identifier Found ?": {
      "main": [
        [
          {
            "node": "Set ContactId Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Has No Phone ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Extra With Id": {
      "main": [
        [
          {
            "node": "If Identifier Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Extra With Phone": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Set ContactId Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has No Phone ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Extra With Phone",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Contact Data By Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Skip Contact": {
      "main": [
        [
          {
            "node": "Skipped",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Return Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "pinData": {},
  "versionId": "5a90c6e5-7a0f-4dc2-a107-e326178a74ea",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ],
  "versao-qp": "latest",
  "Workflow-Nome": "GetChatwootContacts"
}