{
  "name": "ChatwootToQuepasa",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "from-chatwoot",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "From ChatWoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -3620,
        -1620
      ],
      "webhookId": "ae8993fc-1ab0-4de5-90ce-0eb59a2b5c7d",
      "id": "d18a7287-305a-4e3f-b80b-5e822596684b"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Not Message Created Event !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1900,
        300
      ],
      "id": "a12000bb-c4a7-4d98-b41f-769f4791a5a3"
    },
    {
      "parameters": {},
      "name": "Message Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1820,
        -1980
      ],
      "id": "27183f9a-326a-4b5f-94cb-dc08134e2305"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "9311dc6d-807f-4647-894a-acd9c67bbed5",
      "name": "Text Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        60,
        -2020
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2080,
        -560
      ],
      "id": "005c90f5-e03b-42a8-86bf-d6db2d706334"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "outgoing"
            },
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "template"
            }
          ],
          "number": [
            {
              "value1": "={{$json.body.message_type}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1600,
        -1980
      ],
      "id": "ff8dd725-f223-43b1-9681-6724484b27a7"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "ecbf7bf4-fe29-43e1-84d9-6553bba868ea",
      "name": "Normal Exit (GNE)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1400,
        -540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1040,
        -2000
      ],
      "id": "90ca51d4-f54d-4380-b091-b6f48bda3ca3"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"type\"]}}",
              "operation": "notEqual",
              "value2": "agent_bot"
            },
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"name\"]?.toLowerCase()}}",
              "operation": "notContains",
              "value2": "whatsapp outgoing"
            }
          ]
        }
      },
      "name": "Is Not From Sincronize Bot?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -780,
        -2020
      ],
      "id": "0d558b3d-7bd3-463a-be2e-deebdbfdc1e9"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content?.trim()}}",
              "operation": "startsWith",
              "value2": "/"
            }
          ]
        }
      },
      "id": "d867718b-d2c5-442a-897e-8895a6cab8ef",
      "name": "If Control Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        360,
        -2160
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}",
        "options": {}
      },
      "id": "6639bf4a-2ec2-4cee-b210-d883a583bdb9",
      "name": "Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        900,
        -2520
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"messages\"][0][\"sender_type\"]}}",
              "value2": "User"
            }
          ]
        }
      },
      "id": "43d7bd5e-b9c5-499c-8199-21d8ed17c41b",
      "name": "Sent by agent ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1800,
        -560
      ],
      "notesInFlow": true,
      "notes": "Quando vem vazio Ã© porque a conversa foi criada sem mensagem, no caso criado pelo fluxo. ou seja, criada pelo cliente."
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.body.id}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.extra.atoken}}"
            }
          ]
        }
      },
      "name": "Open Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -1600,
        -640
      ],
      "id": "725b48e4-1b2c-4df1-86f8-e5110535b61c",
      "continueOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASAINBOXCONTROL'] ?? 1001 }}",
        "mode": "each",
        "options": {}
      },
      "id": "28e634bc-d9e0-4c6b-a658-5345c5af7b10",
      "name": "Throw To Quepasa Inbox Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -200,
        -2260
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_updated"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -2280,
        140
      ],
      "id": "35b59919-fbaa-44df-8483-5c9258941ddd"
    },
    {
      "parameters": {},
      "id": "728b79a6-4904-4bbd-ac77-ac346dc6a368",
      "name": "Message Update Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1900,
        0
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.body?.content_attributes?.deleted??false}}",
              "value2": true
            }
          ]
        }
      },
      "id": "f01e1e00-c7d6-412a-bba3-e9c68efb0122",
      "name": "If Deleted ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1680,
        0
      ]
    },
    {
      "parameters": {},
      "id": "80a251f8-0cf5-4b5f-b1ec-9718644ddda4",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1460,
        -1740
      ]
    },
    {
      "parameters": {},
      "id": "a2cf0a81-9dc9-45ef-86bf-efe8ebeee701",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1200,
        -2000
      ]
    },
    {
      "parameters": {
        "content": "## POSTING THROW QUEPASA\n",
        "height": 660.7751562097109,
        "width": 1150.6588837494833
      },
      "id": "e15cea71-6b30-42bc-9478-144e88083633",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1420,
        -1800
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qptoken",
              "value": "={{ $json.query.qptoken ?? $json.query.identifier }}"
            },
            {
              "name": "extra.qphost",
              "value": "={{ $json.query.qphost ?? 'http://127.0.0.1:31000' }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.query.cwhost ?? 'http://127.0.0.1:3000' }}"
            },
            {
              "name": "extra.n8nhost",
              "value": "={{ $json.query.n8nhost ?? $env['C8Q_N8N_HOST'] ?? 'http://127.0.0.1:5678' }}"
            },
            {
              "name": "extra.inbox",
              "value": "={{ $json.query.inbox ?? $json.body.inbox_id ?? $json.body.inbox?.id }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.query.account ?? $json.body.account_id ?? $json.body.account?.id ?? $json.body.messages[0]?.account_id }}"
            },
            {
              "name": "extra.identifier",
              "value": "={{ $json.query.identifier }}"
            },
            {
              "name": "extra.utoken",
              "value": "={{ $json.query.utoken ?? $env['C8Q_SUPERUSER_TOKEN'] }}"
            },
            {
              "name": "extra.atoken",
              "value": "={{ $json.query.atoken ?? $env['C8Q_AGENT_TOKEN'] }}"
            },
            {
              "name": "extra.typebot",
              "value": "={{ $json.query?.typebot ?? undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ab7a2dd4-a501-48b0-aeb4-f325f6694344",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -3420,
        -1620
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "45c0501c-4cfa-43d6-8810-b544b6fc3d63",
      "name": "Normal Exit (CUP)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1460,
        -840
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTPROFILEUPDATE'] ?? 1004 }}",
        "options": {}
      },
      "id": "b7cf7373-f181-4115-954d-5561f0f08359",
      "name": "Throw To Profile Update Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1680,
        -840
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT csat_survey_enabled FROM inboxes WHERE id = {{ $json.extra.inbox }}; ",
        "additionalFields": {}
      },
      "id": "c0559776-1768-40bc-b5f1-293a37f10bbe",
      "name": "Enabled CSAT ?",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -120,
        -1220
      ],
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "b8b707f6-f6cc-4161-b625-19ec04b758c5",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        80,
        -1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.status }}",
              "value2": "resolved"
            }
          ]
        }
      },
      "id": "f566bc23-694d-42cc-afc7-9b6d7d8e235b",
      "name": "If Conversation Resolved",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1700,
        -1280
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "qphost",
              "value": "={{$json.extra?.qphost}}"
            },
            {
              "name": "qptoken",
              "value": "={{$json.extra?.qptoken}}"
            },
            {
              "name": "cwhost",
              "value": "={{$json.extra?.cwhost}}"
            },
            {
              "name": "utoken",
              "value": "={{$json.extra?.utoken}}"
            },
            {
              "name": "account",
              "value": "={{$json.extra?.account}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.body?.meta?.sender?.id}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chatid}}"
            }
          ]
        },
        "options": {}
      },
      "id": "3c9c647c-d089-4c71-8273-3ff2aceb7560",
      "name": "Set Update Contact Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1900,
        -840
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Status Changed  Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2380,
        -1040
      ],
      "id": "1ea74ebb-c351-432b-9474-b72eb27bf521"
    },
    {
      "parameters": {
        "content": "## POST RESOLVED MESSAGE\n* to disable, remove that link",
        "height": 461.0344273293615,
        "width": 2847.0653208940353
      },
      "id": "57b0b48f-cbd4-4b43-8b65-fc521791f1c0",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1960,
        -1460
      ]
    },
    {
      "parameters": {},
      "id": "577c3ffe-e89b-4152-b3fa-012e064bedd8",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -300,
        -1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "a9a93bf2-e309-4828-adf8-42a4a830f48b",
      "name": "Skip Evaluation By Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -480,
        -1320
      ]
    },
    {
      "parameters": {},
      "id": "cb468a3e-365d-44d4-a193-30641acaaa68",
      "name": "Evaluation Message Payload Ready To Quepasa",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        660,
        -1300
      ]
    },
    {
      "parameters": {},
      "name": "Post Resolved Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1880,
        -1200
      ],
      "id": "808f441f-e47a-4770-929f-bb58051355cb"
    },
    {
      "parameters": {
        "jsCode": "const IsValidForWhatsapp = function (id){\n  if (typeof(id) === \"undefined\" || id === null) return false;\n  if (id.endsWith('@s.whatsapp.net')) return true;\n  if (id.endsWith('@g.us')) return true;\n  if (id.endsWith('@lid')) return true;\n  return false;\n}\n\nconst response = [];\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (body) {     \n    \n    // obsolete, marked for remove, 2024/04/25\n    const token = item.json.extra.token;\n\n    // default extra content\n    const extra = item.json.extra;\n\n    let chatId = body.conversation.meta?.sender?.identifier;    \n    if (!IsValidForWhatsapp(chatId))\n    {\n      chatId = body.conversation.meta?.sender?.custom_attributes?.quepasa;\n      if (!chatId) {\n        chatId = body.conversation.meta?.sender?.phone_number;\n      }\n    }\n\n    // new aproach\n    if (body.content && body.id) {\n      const payload = {};\n      payload.chatid = chatId;\n      payload.conversationid = body.conversation.id;\n      payload.inreply = body.content_attributes?.in_reply_to_external_id;\n      \n      if (!payload.inreply && body.content_attributes?.in_reply_to)\n        payload.inreply = `${extra.account}-${extra.inbox}-${body.content_attributes.in_reply_to}`;\n\n      if (body.content_type === 'integrations' && body.content_attributes?.type === 'dyte')      \n        body.content += '\\r\\n *** https://app.dyte.in/meeting/stage/' + body.content_attributes?.data.room_name;      \n\n      // leading with \\ at SHIFT+ENTER\n      if (body.content)       \n      {\n        body.content = body.content.replace(/\\n\\\\/g,\"\\n\").replace(/ \\\\/g,\"\");\n        payload.content = body.content; \n      }\n      \n      // should create an extra message for caption ?\n      const textmsg = (!body.attachments) || (body.attachments.length > 1);\n            \n      if (body.content && textmsg) {                \n        payload.messageid = `${body.id}`; // ensure as string \n                \n        const sender = body.sender?.available_name || body.sender?.name || $env['C8Q_UNKNOWN_SENDER'] || 'Auto Atendimento';\n        \n        const customs = body.conversation.meta?.sender?.custom_attributes;\n        const pat = !((customs?.hasOwnProperty('skipagenttitle') ?? false) && (customs?.skipagenttitle ?? false));\n\n        if (pat) payload.sender = sender;\n\n        // appending to response as new item\n        response.push({ payload: { ...payload }, extra: extra });\n        payload.content = undefined;\n      }\n\n      if (body.attachments) {\n        let counter = 0;\n        for (const attach of body.attachments) \n        {\n          // fixed payload counter for multiples attachs, 2024/05/06\n          const attachmentPayload = { ...payload }; // Criando uma nova instÃ¢ncia de payload\n          attachmentPayload.messageid = `${body.id}-A${counter++}`; // ensure as string, adding an attach counter          \n          attachmentPayload.attachment = attach.data_url;\n          \n          // appending to response as new item\n          response.push({ payload: attachmentPayload, extra: extra });                   \n        }\n      }  \n      \n      continue;\n    }    \n    \n    // for each message, *not common to be more than one\n    for (const message of body.conversation.messages) \n    {  \n      const payload = {};\n      payload.chatid = chatId;\n      payload.conversationid = body.conversation.id ?? message.conversation_id;\n      payload.inreply = message.content_attributes?.in_reply_to_external_id;\n\n      if (!payload.inreply && message.content_attributes?.in_reply_to)\n        payload.inreply = `${extra.account}-${extra.inbox}-${message.content_attributes.in_reply_to}`;\n      \n      // obsolete, marked for remove, 2024/04/25\n      payload.token = token;\n\n      // -------------------------------------\n      \n      if (message.content_type === 'integrations' && message.content_attributes?.type === 'dyte')      \n        message.content += '\\r\\n *** https://app.dyte.in/meeting/stage/' + message.content_attributes?.data.room_name;      \n\n      // leading with \\ at SHIFT+ENTER\n      if (message.content)       \n      {\n        message.content = message.content.replace(/\\n\\\\/g,\"\\n\").replace(/ \\\\/g,\"\");\n        payload.content = message.content; \n      }\n      \n      // should create an extra message for caption ?\n      const textmsg = (!message.attachments) || (message.attachments.length > 1);\n            \n      if (message.content && textmsg) {                \n        payload.messageid = `${message.id}`; // ensure as string \n                \n        const sender = message.sender?.available_name || message.sender?.name || $env['C8Q_UNKNOWN_SENDER'] || 'Auto Atendimento';\n        \n        const customs = body.conversation.meta?.sender?.custom_attributes;\n        const pat = !((customs?.hasOwnProperty('skipagenttitle') ?? false) && (customs?.skipagenttitle ?? false));\n\n        if (pat) payload.sender = sender;\n\n        // appending to response as new item\n        response.push({ payload: { ...payload }, extra: extra });\n        payload.content = undefined;\n      }\n\n      if (message.attachments) {\n        let counter = 0;\n        for (const attach of message.attachments) \n        {\n          // fixed payload counter for multiples attachs, 2024/05/06\n          const attachmentPayload = { ...payload }; // Criando uma nova instÃ¢ncia de payload\n          attachmentPayload.messageid = `${message.id}-A${counter++}`; // ensure as string, adding an attach counter          \n          attachmentPayload.attachment = attach.data_url;\n          \n          // appending to response as new item\n          response.push({ payload: attachmentPayload, extra: extra });                   \n        }\n      }  \n    }\n  }\n}\n\nreturn response;"
      },
      "id": "e27e427e-368e-4651-b023-d0983e4c4ad5",
      "name": "Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -200,
        -2020
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "operation": "revoke",
        "messageid": "={{ $json.revoke.id }}"
      },
      "id": "62c9d990-35dd-4711-95ac-5962f8daaff8",
      "name": "Quepasa Revoke",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        -800,
        -60
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{ $json.extra }}"
            },
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.id }}-eval"
            },
            {
              "name": "payload.content",
              "value": "={{ $env['C8Q_MSGFOR_NO_CSAT'] ?? '-----------------------------------------------------\\r\\nSeu atendimento foi marcado como *concluÃ­do* !\\r\\nQualquer mensagem ou reaÃ§Ã£o apÃ³s este anÃºncio, irÃ¡ iniciar uma *nova* conversa.\\r\\n-----------------------------------------------------' }}"
            }
          ],
          "number": [
            {
              "name": "payload.conversationid",
              "value": "={{ $json.body.id }}"
            }
          ],
          "boolean": [
            {
              "name": "csat_survey_enabled",
              "value": "={{ $json.csat_survey_enabled }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4e46fb6a-65ed-4c12-804e-0bcc6a013a47",
      "name": "Payload Without CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        260,
        -1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{extra.account}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "0993d0d7-fea6-4e0e-bffc-384eb83e0c35",
      "name": "Account Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1340,
        -1320
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.account",
              "value": "={{ $json.account_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "affd185f-b7a3-4e52-b3ad-97d41692de37",
      "name": "Set Account in Query",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -980,
        -1200
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "6ab8f210-a7ac-4311-a71c-1ab99b90be14",
      "name": "Merge Account Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -820,
        -1280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.conversation?.meta.sender.identifier?.toLowerCase() }}",
              "value2": "={{ $env[\"C8Q_QP_CONTACT\"] ?? 'control@quepasa.io' }}"
            },
            {
              "value1": "={{ $json.body.meta?.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            },
            {
              "value1": "={{ $json.body.conversation?.meta.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "7559dcb4-15a4-4c6c-8129-5019ed9e223b",
      "name": "From Quepasa Control ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -480,
        -2040
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.43) Updates\n* send to @lid\n\n## Recommendations \n* Remember set timeout to 30 seconds",
        "height": 184.30667672289223,
        "width": 591.0097010851398
      },
      "id": "82ea8c27-036a-456a-8c80-01519388c40d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3900,
        -1960
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_created"
            },
            {
              "value2": "conversation_status_changed",
              "output": 1
            },
            {
              "value2": "conversation_created",
              "output": 2
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch Event",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -3160,
        -1620
      ],
      "id": "485a0e08-c02f-4ece-94ff-f2c3a9d982cf"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEqual",
              "value2": "control@quepasa.io"
            },
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEndsWith",
              "value2": "@broadcast"
            }
          ]
        }
      },
      "id": "c85812d2-97e1-4c2c-b873-b02e24c39c41",
      "name": "If Not Control & Not Broadcast",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1520,
        -1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.extra.pat ? !!JSON.parse($json.extra.pat.toLowerCase()) : true }}",
              "value2": true
            }
          ],
          "string": [
            {
              "value1": "={{  $json.payload.sender }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "afc2e1bb-9f5c-4af4-bd8c-404bbf081291",
      "name": "Should Prepend Agent Title ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        580,
        -2140
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $json.payload.sender ? '*' + $json.payload.sender.trim() + '*: ' : '' }}\n{{ $json.payload.content }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Content With Agent Ttitle",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        780,
        -2220
      ],
      "id": "8b9cc2c4-e14f-4160-89e0-80aaed07976d"
    },
    {
      "parameters": {},
      "id": "05250711-39ae-411c-8619-a92fdef786ff",
      "name": "Follow after prepend",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        980,
        -2120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "fea0650e-83f8-4281-9b6f-a8f8a347b7dd",
      "name": "Skip Evaluate By Conversation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -660,
        -1340
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "messageid": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "method": "sendtext",
        "text": "={{$json.payload.content}}",
        "chatid": "={{$json.payload.chatid}}",
        "trackid": "chatwoot",
        "inreply": "={{$json.payload.inreply }}"
      },
      "id": "bbe29980-8c4c-42bd-b595-bce8a5877202",
      "name": "Quepasa Send Text",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        2060,
        -1420
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000,
      "alwaysOutputData": false,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "baseUrl": "={{ $json.extra.qphost }}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "resource": "information"
      },
      "id": "9054ede4-dfc1-4b9b-950e-cb8494867281",
      "name": "Get Info",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        3360,
        -1460
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 503
        }
      },
      "name": "Disconnected Failed",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        4080,
        -1540
      ],
      "id": "1aeca73a-bb23-4e4e-97a1-01ac9487af98"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public Update ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1240,
        -40
      ],
      "id": "11efa05e-029d-4559-b9fd-debe7232724f"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "outgoing"
            },
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "template"
            }
          ],
          "number": [
            {
              "value1": "={{$json.body.message_type}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message Update ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1460,
        -20
      ],
      "id": "9aa1b481-26e2-41d2-aa0a-f15a55e34898"
    },
    {
      "parameters": {
        "content": "## PROFILE UPDATE\n* throws at conversation status changed ",
        "height": 290.45603652476376,
        "width": 3095.2003130765215
      },
      "id": "149e57f1-dcda-400e-8577-35270dcb9129",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1960,
        -960
      ]
    },
    {
      "parameters": {
        "jsCode": "function hex2a(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfor(let index in items) \n{ \n    if(items[index].json?.chatid){\n        continue;\n    }\n\n    let body = items[index].json[\"body\"];\n    if(body) \n    {\n        // trying to get from external identifier\n        let chatid = body.meta?.sender?.identifier;\n        if(!chatid)\n        {\n            // trying to get from quepasa custom property\n            chatid = body.meta?.sender?.custom_attributes?.quepasa;            \n            if(!chatid)\n            {\n                // trying to get from e-mail\n                chatid = body.meta?.sender?.email;            \n                if(!chatid)\n                {\n                    // trying to unhex from source_id\n                    if(body.contact_inbox?.source_id && body.contact_inbox.source_id.includes(\"@\")){\n                        chatid = hex2a(body.contact_inbox.source_id)\n                    }\n                    \n                    if(!chatid)\n                    {                    \n                        // trying to get from phone number \n                        chatid = body.meta?.sender?.phone_number;\n                        if (chatid) { \n                          chatid += '@s.whatsapp.net';\n                          if (chatid.startsWith('+')) chatid = chatid.substring(1);\n                        }\n                    }\n                }\n            }\n        }\n        items[index].json.chatid = chatid;\n    }\n}\n\nreturn items;"
      },
      "id": "5522d292-3a5e-40c7-a4ec-e527cbb108d2",
      "name": "Ensure ChatId From Custom|Email|Source|Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -2180,
        -1040
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT account_id FROM inboxes WHERE id = '{{ $json.extra.inbox }}'",
        "additionalFields": {}
      },
      "id": "faa82ddc-5cf2-4dfc-9981-e079e0abf733",
      "name": "Get Account From Inbox",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -1140,
        -1200
      ],
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.attachment}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Attachment ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1860,
        -1500
      ],
      "id": "9a1125d4-e770-4d2c-ba92-1774648b4347"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "9b8f6de2-653a-4f70-921a-eea0388b6bfd",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2940,
        -1720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.success }}",
              "operation": "isEmpty"
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.success }}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "270241af-e764-4481-9c74-06d20990d5a0",
      "name": "Has Errors ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2660,
        -1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.server.verified }}"
            }
          ]
        }
      },
      "id": "3f385616-8e41-478e-aee5-aa4b08a1c808",
      "name": "Isn't Verified ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3720,
        -1520
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.payload.conversationid}}/messages ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"private\": true, \"content\": \"â O WhatsApp nÃ£o estÃ¡ verificado.\\n Por favor, reabra o aplicativo e faÃ§a a leitura do cÃ³digo QR novamente.\\n{{$json.message}}\", \"message_type\": 2, \"content_type\": \"text\"}",
        "options": {}
      },
      "id": "72bb0cfe-9a46-403e-adc3-bb93ddf94fb1",
      "name": "Success ?",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3880,
        -1540
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "04c59498-2f59-4e99-a016-185e8fdd05b0",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3560,
        -1520
      ]
    },
    {
      "parameters": {
        "content": "## NOTIFY BACK CHATWOOT\n",
        "height": 660.7751562097108,
        "width": 1738.4843114140765
      },
      "id": "648b0ef9-4352-4562-825d-3264d0a4551f",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2560,
        -1800
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "messageid": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "method": "sendurl",
        "text": "={{$json.payload.content}}",
        "chatid": "={{$json.payload.chatid}}",
        "url": "={{$json.payload.attachment}}",
        "filename": "={{decodeURI($json.payload.attachment.split('/').at(-1))}}",
        "filelength": 0,
        "trackid": "chatwoot",
        "inreply": "={{$json.payload.inreply}}"
      },
      "id": "7dfd35ff-d1ec-4b13-a113-cbc4f970e98c",
      "name": "Quepasa Send Attach",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        2420,
        -1560
      ],
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 1000,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE messages SET status = 3 WHERE id = {{ +$json.payload.messageid.toString().split('-').shift() }}; ",
        "additionalFields": {}
      },
      "id": "c32650ce-15df-4608-a8c4-058be4fbeaa3",
      "name": "Update Message Status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3160,
        -1720
      ],
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {},
      "id": "8c3ca9f2-35fc-4858-ac78-f27be9c47b26",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3160,
        -1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bd2b8cff-a0b8-48a4-83f6-475bfe680d42",
              "leftValue": "={{ $json.payload.attachment }}",
              "rightValue": "active_storage",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ca791025-00e8-4fe7-8667-7853576f0c59",
      "name": "If Remote Storage",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2060,
        -1580
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "d637d35d-13b0-4059-8e7f-900e1a437ad8",
      "name": "Wait For Uploading",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2240,
        -1660
      ],
      "webhookId": "4be09e3c-13a7-48f9-b649-d5942ef6e1e7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f1cd8b50-3f69-46af-8fc2-d843edaa499e",
              "leftValue": "={{$json.body.message_type}}",
              "rightValue": "=template",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "29fbaaae-27f8-455f-9477-862f266ba783",
      "name": "If Template",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1400,
        -2060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7734413d-6030-41a3-8105-ffd84050bddb",
              "leftValue": "={{ $json.body?.conversation?.meta?.sender?.custom_attributes?.skipevaluation }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "d50d06c3-22c6-4443-a7cc-a3d501569f9c",
              "leftValue": "={{ $json.body?.conversation?.custom_attributes?.skipevaluation }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "b8e00642-4a22-4851-b5bf-399230b186fd",
      "name": "Skip Evaluation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -940,
        -2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "166140fa-1409-40d5-ac5e-41e774a81ffd",
              "leftValue": "={{ $json.body?.conversation?.meta?.sender?.custom_attributes?.skipgreetings }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "14d63b7e-c0da-4be3-bafc-8eb48e668609",
      "name": "Skip Greetings",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1060,
        -2360
      ]
    },
    {
      "parameters": {},
      "id": "b7b066b9-da56-4b07-93d8-91299e01b3b4",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -440,
        -2340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c7c65a3a-c4ff-4f18-bee8-4316727360e4",
              "name": "body.content",
              "value": "=*{{$json.body.conversation.meta.sender.name}}* seu atendimento de Ticket de nÂº *{{ $json.body.id }}* foi finalizado ! Caso tenha alguma dÃºvida sÃ³ enviar uma nova mensagem !\n\nAproveite e avalie nosso atendimento. Sua opiniÃ£o Ã© muito importante para nÃ³s e nos ajudarÃ¡ a identificar Ã¡reas de melhorias a fim de continuar oferecendo um serviÃ§o de qualidade. ð\n\nAvalie meu atendimento !\n{{ ($json.extra.cwpublic ?? $env[\"C8Q_CW_PUBLIC_URL\"] ?? $json.extra.cwhost).trimEnd('/') }}/survey/responses/{{$json.body.content.split('/').at(-1)}}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "b4b6b136-56fd-42d7-8527-05d6146b00e0",
      "name": "Custom Evaluation Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -760,
        -2640
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding bot messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok From Customer",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -520,
        -1740
      ],
      "id": "c934152d-3822-4a2f-b280-923e4f43a160"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding private messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok Is Private",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -780,
        -1740
      ],
      "id": "bd35b3a2-5799-4d03-a356-c68d95c6f845"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for outbound messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok Is Incoming",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1400,
        -1900
      ],
      "id": "4f73a5a3-e0a6-400f-9be4-02b62b8280aa"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "skip evaluation",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok Skip Evaluation",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -580,
        -2900
      ],
      "id": "c2e66ce1-74ae-4761-81fb-771753c88205"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "6f6b8ccb-69ed-4a5e-b90c-ff35e40206d6",
      "name": "Respond From Chat Control Workflow",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1160,
        -2520
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond From Inbox Control Workflow",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        20,
        -2260
      ],
      "id": "68859a4b-256f-44da-af0a-c72885de3bc4"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "quepasa send error",
        "options": {
          "responseCode": 400
        }
      },
      "name": "Respond Error From Quepasa",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2860,
        -1520
      ],
      "id": "e4628d66-f870-46e5-a633-c77cc2e70100"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "sent throw quepasa",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok From Quepasa",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2860,
        -1320
      ],
      "id": "9d59481d-1c56-417c-89a7-0bf5e97eb111"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.content_type }}",
                    "rightValue": "input_csat",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "csat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "12cf0100-d8a8-402c-8611-d053e3be3724",
                    "leftValue": "={{ $json.body.conversation.status }}",
                    "rightValue": "=open",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "greetings"
            }
          ]
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "ccc4b710-a665-4ad1-a8c7-adbe2883d736",
      "name": "Switch Template",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1340,
        -2600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.csat_survey_enabled }}"
            }
          ],
          "string": [
            {
              "value1": "={{ $json.payload.content }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "26de0d29-032b-46b9-a053-b0df2aa472bf",
      "name": "Use MSG For Resolved Conversations Without CSAT ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        440,
        -1280
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "3c6da19e-78c8-4bd5-8667-bab8ba763aca",
      "name": "Any Other Update",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1460,
        140
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "0e74bd0f-06cb-42ce-90a1-d012bf5e40ad",
      "name": "Not Outgoing",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1240,
        140
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "79a6c52a-1248-407e-b17a-b78fb16a3853",
      "name": "Not Public",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1020,
        140
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "7b2e8e57-fdd1-4539-9576-6b8b5f4e2eba",
      "name": "Revoked",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -600,
        -60
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "2b7dc6ee-4ddd-453a-bd34-c6d0e3ee987f",
      "name": "Normal Exit C",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1520,
        -1140
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "bd3a6f9c-25b5-4f85-82d4-2ea5a4705b90",
      "name": "Normal Exit C1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1340,
        -1140
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "9b12ef58-9aea-4524-84e8-b3e27b3d6cef",
      "name": "Normal Exit C2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -480,
        -1480
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "843b6278-974e-4875-9a5a-8459659d4dbb",
      "name": "Normal Exit C3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -240,
        -1480
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "25d769de-656a-42df-a08f-9a3cf3cbee5b",
      "name": "Normal Exit C4",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        660,
        -1120
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "d7b3d54a-6d4e-4d79-977b-f35752a68370",
      "name": "Normal Exit C5",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        3360,
        -1720
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "f0d603b0-bbb5-4c3d-be1d-0acc1b6b3d92",
      "name": "Normal Exit C6",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        3880,
        -1400
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "skip greetings",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Respond Ok Skip Greetings",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -700,
        -2460
      ],
      "id": "0a285f30-70d5-481e-8a31-7b4c5df4213c"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE messages SET content = NULL WHERE id = {{ +$json.body.id }}",
        "additionalFields": {}
      },
      "id": "259f5848-a805-445b-afc4-ab9afd6d990f",
      "name": "Clear Evaluation Message",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -760,
        -2900
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE messages SET content = NULL WHERE id = {{ +$json.body.id }}",
        "additionalFields": {}
      },
      "id": "6b88d2c7-c65e-4591-9cc2-5393c486ddd5",
      "name": "Clear Greetings Message",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -860,
        -2460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT uuid FROM conversations WHERE account_id = {{ $json.extra.account }} and display_id = {{ $json.body.conversation.idÂ }};",
        "options": {}
      },
      "id": "8394f2ed-9327-4354-8c88-e612a9f21ff9",
      "name": "Get Evaluation UUID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -280,
        -2760
      ],
      "credentials": {
        "postgres": {
          "id": "0IbD9n8B6WgXz9uK",
          "name": "DB_Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE messages SET \"content_type\" = 0, \"content\" = '{{ $json.body.content }}' WHERE id = {{ +$json.body.idÂ }}",
        "options": {}
      },
      "id": "fbd93b78-3971-45c4-960b-4bb42f8c0f49",
      "name": "Update Evaluation Message With CustomÂ Content",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -500,
        -2640
      ],
      "disabled": true
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "inbox",
              "value": "={{ $json.extra?.inbox ?? '' }}"
            },
            {
              "key": "conversation",
              "value": "={{ $json.body?.event?.startsWith('conversation') ? $json.body.id : $json.body?.conversation?.id ?? '' }}"
            },
            {
              "key": "message",
              "value": "={{ $json.body?.event?.startsWith('message') ? $json.body.id : '' }}"
            },
            {
              "key": "source",
              "value": "={{ $json.body?.event?.startsWith('message') ? $json.body.source_id : '' }}"
            },
            {
              "key": "account",
              "value": "={{ $json.body?.account?.id ?? '' }}"
            },
            {
              "key": "event",
              "value": "={{ $json.body?.event ?? '' }}"
            }
          ]
        }
      },
      "id": "04157b4a-3832-45f1-9fb5-7313daacc22b",
      "name": "Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -3160,
        -1880
      ],
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 278.9574374256098,
        "width": 394.6908294938413
      },
      "id": "451ad25d-7590-45e5-a654-dd3c3d98617f",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3300,
        -1960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f6e974e-b2da-4e8d-9145-bec03ab1554a",
              "name": "revoke.id",
              "value": "={{ ($json.body.source_id?.length) ? $json.body.source_id : `${$json.extra.account}-${$json.extra.inbox}-${$json.body.id}` }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "e47bc8bf-d29f-4266-aa4d-0e17e8e0543e",
      "name": "Set Revoke Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        -60
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "67b346ee-fa8e-4a26-b016-9c78a2e72cd6",
              "leftValue": "={{ $('Defaults').item.json.query.typebot }}\n",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "d7d0bace-4066-47dc-a4ea-3b8bbd46e0cf",
              "leftValue": "={{ $json.body.conversation.status }}",
              "rightValue": "pending",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -200,
        -1780
      ],
      "id": "c52721be-21c1-4305-8fc6-818a81af2f5e",
      "name": "Typebot?",
      "disabled": true
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.body.conversation.id}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.extra.atoken}}"
            }
          ]
        }
      },
      "name": "Open Conversation-Pause-Session-Typebot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        80,
        -1800
      ],
      "id": "11a6f70d-f2a2-4c03-af2a-d629e5e748fc",
      "continueOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    }
  ],
  "pinData": {},
  "connections": {
    "From ChatWoot": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Created Event": {
      "main": [
        [
          {
            "node": "Is Outgoing Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Message ?": {
      "main": [
        [
          {
            "node": "If Control Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Created Event": {
      "main": [
        [
          {
            "node": "Sent by agent ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message ?": {
      "main": [
        [
          {
            "node": "If Template",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Ok Is Incoming",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Public ?": {
      "main": [
        [
          {
            "node": "Is Not From Sincronize Bot?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Ok Is Private",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Not From Sincronize Bot?": {
      "main": [
        [
          {
            "node": "From Quepasa Control ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Typebot?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Ok From Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Control Message": {
      "main": [
        [
          {
            "node": "Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Should Prepend Agent Title ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Chat Control Workflow": {
      "main": [
        [
          {
            "node": "Respond From Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sent by agent ?": {
      "main": [
        [
          {
            "node": "Open Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open Conversation": {
      "main": [
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Message Update Event",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Not Message Created Event !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Update Event": {
      "main": [
        [
          {
            "node": "If Deleted ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Deleted ?": {
      "main": [
        [
          {
            "node": "Is Outgoing Message Update ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Any Other Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Has Attachment ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "Switch Event",
            "type": "main",
            "index": 0
          },
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To Profile Update Workflow": {
      "main": [
        [
          {
            "node": "Normal Exit (CUP)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enabled CSAT ?": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Payload Without CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Resolved": {
      "main": [
        [
          {
            "node": "If Not Control & Not Broadcast",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit C",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Update Contact Payload": {
      "main": [
        [
          {
            "node": "Throw To Profile Update Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Status Changed  Event": {
      "main": [
        [
          {
            "node": "Ensure ChatId From Custom|Email|Source|Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Enabled CSAT ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation By Contact": {
      "main": [
        [
          {
            "node": "Normal Exit C3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evaluation Message Payload Ready To Quepasa": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Resolved Message": {
      "main": [
        [
          {
            "node": "If Conversation Resolved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload": {
      "main": [
        [
          {
            "node": "Text Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Without CSAT": {
      "main": [
        [
          {
            "node": "Use MSG For Resolved Conversations Without CSAT ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Account Found ?": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Account From Inbox",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Account in Query": {
      "main": [
        [
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Account Id": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Quepasa Control ?": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Inbox Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Event": {
      "main": [
        [
          {
            "node": "Message Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Status Changed  Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Control & Not Broadcast": {
      "main": [
        [
          {
            "node": "Account Found ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit C1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Prepend Agent Title ?": {
      "main": [
        [
          {
            "node": "Update Content With Agent Ttitle",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Content With Agent Ttitle": {
      "main": [
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow after prepend": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluate By Conversation": {
      "main": [
        [
          {
            "node": "Normal Exit C2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip Evaluation By Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Text": {
      "main": [
        [
          {
            "node": "Has Errors ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Info": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Is Public Update ?": {
      "main": [
        [
          {
            "node": "Set Revoke Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Public",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message Update ?": {
      "main": [
        [
          {
            "node": "Is Public Update ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Outgoing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ensure ChatId From Custom|Email|Source|Phone": {
      "main": [
        [
          {
            "node": "Post Resolved Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Update Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Account From Inbox": {
      "main": [
        [
          {
            "node": "Set Account in Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Attachment ?": {
      "main": [
        [
          {
            "node": "If Remote Storage",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Errors ?": {
      "main": [
        [
          {
            "node": "Respond Error From Quepasa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respond Ok From Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Message Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Isn't Verified ?": {
      "main": [
        [
          {
            "node": "Success ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit C6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success ?": {
      "main": [
        [
          {
            "node": "Disconnected Failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Isn't Verified ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Attach": {
      "main": [
        [
          {
            "node": "Has Errors ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Remote Storage": {
      "main": [
        [
          {
            "node": "Wait For Uploading",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Uploading": {
      "main": [
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Template": {
      "main": [
        [
          {
            "node": "Switch Template",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation": {
      "main": [
        [
          {
            "node": "Clear Evaluation Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Custom Evaluation Content",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Evaluation UUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Greetings": {
      "main": [
        [
          {
            "node": "Clear Greetings Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Custom Evaluation Content": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Evaluation Message With CustomÂ Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To Quepasa Inbox Control Workflow": {
      "main": [
        [
          {
            "node": "Respond From Inbox Control Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond Error From Quepasa": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch Template": {
      "main": [
        [
          {
            "node": "Skip Evaluation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip Greetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Use MSG For Resolved Conversations Without CSAT ?": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit C4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Revoke": {
      "main": [
        [
          {
            "node": "Revoked",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Message Status": {
      "main": [
        [
          {
            "node": "Normal Exit C5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear Greetings Message": {
      "main": [
        [
          {
            "node": "Respond Ok Skip Greetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clear Evaluation Message": {
      "main": [
        [
          {
            "node": "Respond Ok Skip Evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Revoke Id": {
      "main": [
        [
          {
            "node": "Quepasa Revoke",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Typebot?": {
      "main": [
        [
          {
            "node": "Open Conversation-Pause-Session-Typebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 50,
    "executionOrder": "v1"
  },
  "versionId": "570642b3-3629-41ab-9684-3d5ed11849a7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "33738330930e3881dd5571eca013f36ddf8aab20e4ea5c1f2ebaf4a2b4668ac6"
  },
  "id": "1008",
  "tags": [
    {
      "createdAt": "2022-10-13T15:26:11.519Z",
      "updatedAt": "2023-08-25T18:50:53.269Z",
      "id": "5",
      "name": "quepasa"
    },
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ]
}
