{
  "createdAt": "2024-04-24T01:25:11.568Z",
  "updatedAt": "2024-06-19T00:17:09.289Z",
  "id": "1008",
  "name": "ChatwootToQuepasa",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "from-chatwoot",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "From ChatWoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -3220,
        1300
      ],
      "webhookId": "ae8993fc-1ab0-4de5-90ce-0eb59a2b5c7d",
      "id": "54e04c09-8ea1-4691-9c2b-1e59cd217894"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Not Message Created Event !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1600,
        3220
      ],
      "id": "48abe4e9-6c56-4f44-88fe-abb3bbb148ec"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for outbound messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Incoming !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1100,
        1020
      ],
      "id": "b987793f-57ab-44c0-b486-0c8a20fc4bf3"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding private messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Private !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -480,
        1180
      ],
      "id": "90dff95f-d383-492e-8e03-4d5007074a12"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding bot messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "From Customer !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -220,
        1180
      ],
      "id": "3db28bad-056a-4c9a-afd5-cef68013c6f9"
    },
    {
      "parameters": {},
      "name": "Message Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1520,
        940
      ],
      "id": "4fb30537-8059-4828-bae6-dbdd7ae745e2"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "7f13f984-e288-4a90-ad78-e6d1522db58b",
      "name": "Text Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        340,
        900
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1780,
        2360
      ],
      "id": "5ceb0735-d826-4a6e-ad23-ca465500740c"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "31daf812-a26a-4ec6-8f00-3a48ef757381",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1440,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "outgoing"
            },
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "template"
            }
          ],
          "number": [
            {
              "value1": "={{$json.body.message_type}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1300,
        940
      ],
      "id": "8f9c24a2-7f06-4be8-985a-ec801c77b4c3"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "ab169b28-5802-4948-b740-902e52eeaf93",
      "name": "Normal Exit (GNE)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1100,
        2380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -740,
        920
      ],
      "id": "77578146-4f24-4652-90c9-b515ec26f946"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"type\"]}}",
              "operation": "notEqual",
              "value2": "agent_bot"
            },
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"name\"]?.toLowerCase()}}",
              "operation": "notContains",
              "value2": "whatsapp outgoing"
            }
          ]
        }
      },
      "name": "Is Not From Sincronize Bot?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -480,
        900
      ],
      "id": "2fa5935d-e695-4c28-983c-a4bbdf325adc"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "startsWith",
              "value2": "/"
            }
          ]
        }
      },
      "id": "4043ff87-a6bf-4821-9642-9ce3fbf85b77",
      "name": "If Control Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        640,
        760
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}",
        "options": {}
      },
      "id": "08b557c9-576a-4f99-b73e-3cecc69e1697",
      "name": "Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1180,
        400
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"messages\"][0][\"sender_type\"]}}",
              "value2": "User"
            }
          ]
        }
      },
      "id": "3ff742be-ddbc-475d-80e2-47e1fda5bc8b",
      "name": "Sent by agent ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1500,
        2360
      ],
      "notesInFlow": true,
      "notes": "Quando vem vazio Ã© porque a conversa foi criada sem mensagem, no caso criado pelo fluxo. ou seja, criada pelo cliente."
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.body.id}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.extra.atoken}}"
            }
          ]
        }
      },
      "name": "Open Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -1300,
        2280
      ],
      "id": "2c2334b6-2573-4dda-8983-2b4211753183",
      "continueOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASAINBOXCONTROL'] ?? 1001 }}",
        "options": {}
      },
      "id": "4dc2adbf-6fd3-426a-9b14-bc0e58102da1",
      "name": "Throw To Quepasa Inbox Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        100,
        660
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_updated"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -1980,
        3060
      ],
      "id": "baa4e169-fb11-437e-9da7-eab6cd300e50"
    },
    {
      "parameters": {},
      "id": "3b0c5a5a-f922-41d2-9e73-1836a286cf71",
      "name": "Message Update Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1600,
        2920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.body?.content_attributes?.deleted??false}}",
              "value2": true
            }
          ]
        }
      },
      "id": "b0b8837c-12ba-495a-84ee-97cd882bb89c",
      "name": "If Deleted ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1380,
        2920
      ]
    },
    {
      "parameters": {},
      "id": "1da0bb76-3cc0-4a45-bf88-aa37ff5a4dab",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1740,
        1180
      ]
    },
    {
      "parameters": {},
      "id": "6622e35f-dbb9-40dc-b3cf-d9853720d4c5",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1480,
        920
      ]
    },
    {
      "parameters": {
        "content": "## POSTING THROW QUEPASA\n",
        "height": 660.7751562097109,
        "width": 1150.6588837494833
      },
      "id": "3b9cd855-6e70-411e-b223-283d833f5115",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        1120
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qptoken",
              "value": "={{ $json.query.qptoken ?? $json.query.identifier }}"
            },
            {
              "name": "extra.qphost",
              "value": "={{ $env[\"C8Q_QUEPASA_HOST\"] }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $env[\"C8Q_CW_HOST\"] }}"
            },
            {
              "name": "extra.n8nhost",
              "value": "={{ $env[\"C8Q_N8N_HOST\"] }}"
            },
            {
              "name": "extra.inbox",
              "value": "={{ $json.query.inbox ?? $json.body.inbox_id ?? $json.body.inbox?.id }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.query.account ?? $json.body.account_id ?? $json.body.account?.id ?? $json.body.messages[0]?.account_id }}"
            },
            {
              "name": "extra.identifier",
              "value": "={{ $json.query.identifier }}"
            },
            {
              "name": "extra.utoken",
              "value": "={{ $json.query.utoken }}"
            },
            {
              "name": "extra.atoken",
              "value": "={{ $json.query.atoken }}"
            }
          ]
        },
        "options": {}
      },
      "id": "574eef81-1cb2-4963-b2e2-9a64d1d231a8",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -3040,
        1300
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "558fc0ff-5a97-4df4-9788-1b67fb878273",
      "name": "Normal Exit (CUP)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1160,
        2080
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTPROFILEUPDATE'] ?? 1004 }}",
        "options": {}
      },
      "id": "fcc71578-1e37-4b03-8a01-6704de14fe41",
      "name": "Throw To Profile Update Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1380,
        2080
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT csat_survey_enabled FROM inboxes WHERE id = {{ $json.extra.inbox }}; ",
        "additionalFields": {}
      },
      "id": "d5ac1d47-073b-485a-9eb9-44ed75d3c99f",
      "name": "Enabled CSAT ?",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        180,
        1700
      ],
      "credentials": {
        "postgres": {
          "id": "NSSYN4EOlkv5kmYY",
          "name": "DB_CHATWOOT"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3d098ff6-ee6a-4903-9bc1-1df140ef7985",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        360,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.csat_survey_enabled }}",
              "value2": true
            }
          ]
        }
      },
      "id": "17882032-a45a-4a1d-98fb-aefd6b72ef96",
      "name": "Use CSAT ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        520,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.status }}",
              "value2": "resolved"
            }
          ]
        }
      },
      "id": "bcda9bb8-7021-45a5-91f0-2935bfbdc74a",
      "name": "If Conversation Resolved",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1400,
        1640
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "qphost",
              "value": "={{$json.extra?.qphost}}"
            },
            {
              "name": "qptoken",
              "value": "={{$json.extra?.qptoken}}"
            },
            {
              "name": "cwhost",
              "value": "={{$json.extra?.cwhost}}"
            },
            {
              "name": "utoken",
              "value": "={{$json.extra?.utoken}}"
            },
            {
              "name": "account",
              "value": "={{$json.extra?.account}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.body?.meta?.sender?.id}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chatid}}"
            }
          ]
        },
        "options": {}
      },
      "id": "a44a1a4c-78a7-46f1-9200-71ff131534d3",
      "name": "Set Update Contact Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1600,
        2080
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Status Changed  Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2080,
        1880
      ],
      "id": "8d0fd313-7955-49ca-8422-e3493b5901c1"
    },
    {
      "parameters": {
        "content": "## POST RESOLVED MESSAGE\n* to disable, remove that link",
        "height": 461.0344273293615,
        "width": 2847.0653208940353
      },
      "id": "33c9db0e-d108-4638-95cb-acf7ea4c0630",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1660,
        1460
      ]
    },
    {
      "parameters": {},
      "id": "594a8f8e-bc89-4d92-a60d-ffa0e10e3f98",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        0,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "d4978dd8-85f9-4b38-8b08-022550ee6262",
      "name": "Skip Evaluation By Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -180,
        1600
      ]
    },
    {
      "parameters": {},
      "id": "72888a9d-b09f-4908-9535-ce59e235fab6",
      "name": "Evaluation Message Payload Ready To Quepasa",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        960,
        1660
      ]
    },
    {
      "parameters": {},
      "name": "Post Resolved Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1580,
        1720
      ],
      "id": "6c795f82-0f3c-4967-84f3-075e3ed14b6b"
    },
    {
      "parameters": {
        "jsCode": "const response = [];\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (body) {     \n    \n    // obsolete, marked for remove, 2024/04/25\n    const token = item.json.extra.token;\n\n    // default extra content\n    const extra = item.json.extra;\n\n    let chatId = body.conversation.meta?.sender?.identifier;    \n    if (!chatId)\n    {\n      chatId = body.conversation.meta?.sender?.custom_attributes?.quepasa;\n      if (!chatId) {\n        chatId = body.conversation.meta?.sender?.phone_number;\n      }\n    }\n\n    // for each message, *not common to be more than one\n    for (const message of body.conversation.messages) \n    {  \n      const payload = {};\n      payload.chatid = chatId;\n      payload.conversationid = body.conversation.id ?? message.conversation_id;\n      payload.inreply = message.content_attributes?.in_reply_to_external_id;\n\n      if (!payload.inreply && message.content_attributes?.in_reply_to)\n        payload.inreply = `${extra.account}-${extra.inbox}-${message.content_attributes.in_reply_to}`;\n      \n      // obsolete, marked for remove, 2024/04/25\n      payload.token = token;\n\n      // -------------------------------------\n      \n      if (message.content_type === 'integrations' && message.content_attributes?.type === 'dyte')      \n        message.content += '\\r\\n *** https://app.dyte.in/meeting/stage/' + message.content_attributes?.data.room_name;      \n\n      // leading with \\ at SHIFT+ENTER\n      if (message.content)       \n      {\n        message.content = message.content.replace(/\\n\\\\/g,\"\\n\").replace(/ \\\\/g,\"\");\n        payload.content = message.content; \n      }\n      \n      // should create an extra message for caption ?\n      const textmsg = (!message.attachments) || (message.attachments.length > 1);\n            \n      if (message.content && textmsg) {                \n        payload.messageid = `${message.id}`; // ensure as string \n                \n        const sender = message.sender?.available_name || message.sender?.name || $env['C8Q_UNKNOWN_SENDER'] || 'Auto Atendimento';\n        \n        const customs = body.conversation.meta?.sender?.custom_attributes;\n        const pat = !((customs?.hasOwnProperty('skipagenttitle') ?? false) && (customs?.skipagenttitle ?? false));\n\n        if (pat) payload.sender = sender;\n\n        // appending to response as new item\n        response.push({ payload: { ...payload }, extra: extra });\n        payload.content = undefined;\n      }\n\n      if (message.attachments) {\n        let counter = 0;\n        for (const attach of message.attachments) \n        {\n          // fixed payload counter for multiples attachs, 2024/05/06\n          const attachmentPayload = { ...payload }; // Criando uma nova instÃ¢ncia de payload\n          attachmentPayload.messageid = `${message.id}-A${counter++}`; // ensure as string, adding an attach counter          \n          attachmentPayload.attachment = attach.data_url;\n          \n          // appending to response as new item\n          response.push({ payload: attachmentPayload, extra: extra });                   \n        }\n      }  \n    }\n  }\n}\n\nreturn response;"
      },
      "id": "8238f25d-9df0-4e47-b622-e1b6fd913684",
      "name": "Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        100,
        900
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "operation": "revoke",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.body.id }}"
      },
      "id": "8323c72e-84cb-49ee-a8b9-cf7f5d4a3645",
      "name": "Quepasa Revoke",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        -720,
        2860
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{ $json.extra }}"
            },
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.id }}-eval"
            },
            {
              "name": "payload.content",
              "value": "=*{{ $json[\"body\"][\"meta\"][\"sender\"][\"name\"] }}* seu atendimento de Ticket de nÂº *{{ $json.body.id }}* foi finalizado ! Caso tenha alguma dÃºvida sÃ³ enviar uma nova mensagem !\n\nAproveite e avalie nosso atendimento. Sua opiniÃ£o Ã© muito importante para nÃ³s e nos ajudarÃ¡ a identificar Ã¡reas de melhorias a fim de continuar oferecendo um serviÃ§o de qualidade. ð\n\nAvalie meu atendimento !\n{{ ($json.extra.cwpublic ?? $env[\"C8Q_CW_PUBLIC_URL\"] ?? $json.extra.cwhost).trimEnd('/') }}/survey/responses/{{ $json.uuid }}"
            }
          ],
          "number": [
            {
              "name": "payload.conversationid",
              "value": "={{ $json.body.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5225aff7-9f3d-4e18-8821-6acf11908cd2",
      "name": "Payload With CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        740,
        1480
      ],
      "disabled": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{ $json.extra }}"
            },
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.id }}-eval"
            },
            {
              "name": "payload.content",
              "value": "-----------------------------------------------------\nSeu atendimento foi marcado como *concluÃ­do* !\nQualquer mensagem ou reaÃ§Ã£o apÃ³s este anÃºncio, irÃ¡ iniciar uma *nova* conversa.\n-----------------------------------------------------"
            }
          ],
          "number": [
            {
              "name": "payload.conversationid",
              "value": "={{ $json.body.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "09797883-67b3-417c-977b-4e554687d58a",
      "name": "Payload Without CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        740,
        1660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{extra.account}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "674bbfd1-c794-44c1-b430-0d91d6b68f05",
      "name": "Account Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1040,
        1600
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.account",
              "value": "={{ $json.account_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5d5b9355-a0dd-4314-ab2a-370161ccb1b1",
      "name": "Set Account in Query",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -680,
        1720
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "5bafaf15-504f-4e77-a0f1-3bc78710767e",
      "name": "Merge Account Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -520,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.conversation?.meta.sender.identifier?.toLowerCase() }}",
              "value2": "={{ $env[\"C8Q_QP_CONTACT\"] ?? 'control@quepasa.io' }}"
            },
            {
              "value1": "={{ $json.body.meta?.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            },
            {
              "value1": "={{ $json.body.conversation?.meta.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "eadecf5a-5512-4cce-beaf-b9a34d3e459c",
      "name": "From Quepasa Control ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -180,
        880
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.30) Updates\n* upper msg id\n\n## Recommendations \n* Remember set timeout to 30 seconds",
        "height": 184.30667672289223,
        "width": 457.17616077915915
      },
      "id": "7bc6f141-1d62-4bd0-8541-c0913f1dfbb8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3220,
        1080
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_created"
            },
            {
              "value2": "conversation_status_changed",
              "output": 1
            },
            {
              "value2": "conversation_created",
              "output": 2
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch Event",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -2860,
        1300
      ],
      "id": "b1f8b4fc-d19e-44f8-aa1e-009c30e7c07e"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEqual",
              "value2": "control@quepasa.io"
            },
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEndsWith",
              "value2": "@broadcast"
            }
          ]
        }
      },
      "id": "bf676a37-3594-4f27-bb76-d5e663429c9a",
      "name": "If Not Control & Not Broadcast",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1220,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.extra.pat ? !!JSON.parse($json.extra.pat.toLowerCase()) : true }}",
              "value2": true
            }
          ],
          "string": [
            {
              "value1": "={{  $json.payload.sender }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "db2605e3-f77f-408a-add0-185d7b7808a0",
      "name": "Should Prepend Agent Title ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        860,
        780
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $json.payload.sender ? '*' + $json.payload.sender.trim() + '*: ' : '' }}\n{{ $json.payload.content }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Content With Agent Ttitle",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1060,
        700
      ],
      "id": "4c0caa76-a832-4f7c-a217-9a8f841a8aac"
    },
    {
      "parameters": {},
      "id": "406930d7-06cd-45c0-b573-288ddb4c358e",
      "name": "Follow after prepend",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1260,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "1099df17-97d8-49af-a6d4-aef4bad2161a",
      "name": "Skip Evaluate By Conversation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -360,
        1580
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Normal Exit (RAS)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        3140,
        1600
      ],
      "id": "93ff8247-0d14-4fa4-9db0-a56e1b454442"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "trackId": "chatwoot",
        "inReply": "={{$json.payload.inreply }}"
      },
      "id": "af6ced35-8a1e-4535-9c73-26847bd8731b",
      "name": "Quepasa Send Text",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        2340,
        1500
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000,
      "alwaysOutputData": false,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "baseUrl": "={{ $json.extra.qphost }}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "resource": "information"
      },
      "id": "60b3b79f-a24e-48f7-8c3f-fca87934391a",
      "name": "Get Info",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        3640,
        1460
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 503
        }
      },
      "name": "Disconnected Failed",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        4320,
        1380
      ],
      "id": "62a364dd-1ee0-43ab-81b0-d1a15ce37205"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public Update ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -940,
        2880
      ],
      "id": "7a718cf8-021c-4086-adab-846727a8e240"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "outgoing"
            },
            {
              "value1": "={{$json.body.message_type}}",
              "value2": "template"
            }
          ],
          "number": [
            {
              "value1": "={{$json.body.message_type}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message Update ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1160,
        2900
      ],
      "id": "615bad2f-3c5f-4cc4-b67c-d41ba75a9233"
    },
    {
      "parameters": {
        "content": "## PROFILE UPDATE\n* throws at conversation status changed ",
        "height": 290.45603652476376,
        "width": 3095.2003130765215
      },
      "id": "b210151a-cc4e-433e-b859-e70b6aa5cca2",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1660,
        1960
      ]
    },
    {
      "parameters": {
        "jsCode": "function hex2a(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfor(let index in items) \n{ \n    if(items[index].json?.chatid){\n        continue;\n    }\n\n    let body = items[index].json[\"body\"];\n    if(body) \n    {\n        // trying to get from external identifier\n        let chatid = body.meta?.sender?.identifier;\n        if(!chatid)\n        {\n            // trying to get from quepasa custom property\n            chatid = body.meta?.sender?.custom_attributes?.quepasa;            \n            if(!chatid)\n            {\n                // trying to get from e-mail\n                chatid = body.meta?.sender?.email;            \n                if(!chatid)\n                {\n                    // trying to unhex from source_id\n                    if(body.contact_inbox?.source_id && body.contact_inbox.source_id.includes(\"@\")){\n                        chatid = hex2a(body.contact_inbox.source_id)\n                    }\n                    \n                    if(!chatid)\n                    {                    \n                        // trying to get from phone number \n                        chatid = body.meta?.sender?.phone_number;\n                        if (chatid) { \n                          chatid += '@s.whatsapp.net';\n                          if (chatid.startsWith('+')) chatid = chatid.substring(1);\n                        }\n                    }\n                }\n            }\n        }\n        items[index].json.chatid = chatid;\n    }\n}\n\nreturn items;"
      },
      "id": "bf784c7c-bc6f-41f5-9fe6-ae3e9c533b47",
      "name": "Ensure ChatId From Custom|Email|Source|Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -1880,
        1880
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT account_id FROM inboxes WHERE id = '{{ $json.extra.inbox }}'",
        "additionalFields": {}
      },
      "id": "d4dde1b5-18a9-4ac3-9a48-b6e0eca48656",
      "name": "Get Account From Inbox",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -840,
        1720
      ],
      "credentials": {
        "postgres": {
          "id": "NSSYN4EOlkv5kmYY",
          "name": "DB_CHATWOOT"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.attachment}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Attachment ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2140,
        1420
      ],
      "id": "aff9d8ec-534a-4bf8-a4d1-b42b38bf87b0"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "ac6d4581-0052-4972-b39d-f80db8f588b3",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3220,
        1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.success }}",
              "operation": "isEmpty"
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.success }}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "b5a2892e-0e42-4213-bbce-3cd0cef79fe9",
      "name": "Has Errors ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2940,
        1500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.server.verified }}"
            }
          ]
        }
      },
      "id": "2d8db4ad-b1b7-4b37-bea9-2b0e12652f70",
      "name": "Isn't Verified ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4000,
        1400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.payload.conversationid}}/messages ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"private\": true, \"content\": \"â O WhatsApp nÃ£o estÃ¡ verificado.\\n Por favor, reabra o aplicativo e faÃ§a a leitura do cÃ³digo QR novamente.\\n{{$json.message}}\", \"message_type\": 2, \"content_type\": \"text\"}",
        "options": {}
      },
      "id": "88d4ce80-ff94-4d1c-82d8-1ebc826796b4",
      "name": "Success ?",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4160,
        1380
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f0653dd9-24a9-4778-935b-1b18824a4a46",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3840,
        1400
      ]
    },
    {
      "parameters": {
        "content": "## NOTIFY BACK CHATWOOT\n",
        "height": 660.7751562097108,
        "width": 1738.4843114140765
      },
      "id": "736e674b-ba6c-495e-b286-420c13b01d8d",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2840,
        1120
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{ $json.extra.qptoken ?? $json.extra.identifier }}",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "method": "sendurl",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "url": "={{$json.payload.attachment}}",
        "filename": "={{decodeURI($json.payload.attachment.split('/').at(-1))}}",
        "trackId": "chatwoot",
        "inReply": "={{$json.payload.inreply}}"
      },
      "id": "2290ff65-7495-4ad3-b043-1db8e5eaf746",
      "name": "Quepasa Send Attach",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        2700,
        1360
      ],
      "retryOnFail": true,
      "maxTries": 3,
      "waitBetweenTries": 1000,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE messages SET status = 3 WHERE id = {{ +$json.payload.messageid.toString().split('-').shift() }}; ",
        "additionalFields": {}
      },
      "id": "9d417c96-6478-4fa8-97d5-7bfd7ba6cbb9",
      "name": "Update Message Status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3440,
        1200
      ],
      "credentials": {
        "postgres": {
          "id": "NSSYN4EOlkv5kmYY",
          "name": "DB_CHATWOOT"
        }
      }
    },
    {
      "parameters": {},
      "id": "8c512020-8254-4d28-b73c-9f8a234e2c38",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3440,
        1380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bd2b8cff-a0b8-48a4-83f6-475bfe680d42",
              "leftValue": "={{ $json.payload.attachment }}",
              "rightValue": "active_storage",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "63a56539-a3a7-459c-af23-52d0305e1b88",
      "name": "If Remote Storage",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2340,
        1340
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "32805a6d-d5d1-476b-a127-0ef487b3a248",
      "name": "Wait For Uploading",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2520,
        1260
      ],
      "webhookId": "4be09e3c-13a7-48f9-b649-d5942ef6e1e7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f1cd8b50-3f69-46af-8fc2-d843edaa499e",
              "leftValue": "={{$json.body.message_type}}",
              "rightValue": "=template",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e7ba5982-bcd7-48d9-a5bf-74c1adb2e2c2",
      "name": "If Template",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1100,
        860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.content_type }}",
                    "rightValue": "input_csat",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "csat"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": false,
                  "leftValue": "",
                  "typeValidation": "loose"
                },
                "conditions": [
                  {
                    "id": "12cf0100-d8a8-402c-8611-d053e3be3724",
                    "leftValue": "={{ $json.body.conversation.status }}",
                    "rightValue": "=open",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "greetings"
            }
          ]
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "4eace81a-35f2-4014-87e4-67f53ccd126d",
      "name": "Switch Template",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -960,
        620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "7734413d-6030-41a3-8105-ffd84050bddb",
              "leftValue": "={{ $json.body?.conversation?.meta?.sender?.custom_attributes?.skipevaluation }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "d50d06c3-22c6-4443-a7cc-a3d501569f9c",
              "leftValue": "={{ $json.body?.conversation?.custom_attributes?.skipevaluation }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "c7c472a3-62d0-43d5-af3b-1cf4029b218d",
      "name": "Skip Evaluation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -760,
        540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "166140fa-1409-40d5-ac5e-41e774a81ffd",
              "leftValue": "={{ $json.body?.conversation?.meta?.sender?.custom_attributes?.skipgreetings }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "720a2e11-daba-458e-8edb-bde7c1f626f4",
      "name": "Skip Greetings",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -760,
        680
      ]
    },
    {
      "parameters": {},
      "id": "316e24cd-080e-4707-8e78-83c4e049a10c",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -220,
        620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c7c65a3a-c4ff-4f18-bee8-4316727360e4",
              "name": "body.conversation.messages[0].content",
              "value": "=*{{$json.body.conversation.meta.sender.name}}* seu atendimento de Ticket de nÂº *{{ $json.body.id }}* foi finalizado ! Caso tenha alguma dÃºvida sÃ³ enviar uma nova mensagem !\n\nAproveite e avalie nosso atendimento. Sua opiniÃ£o Ã© muito importante para nÃ³s e nos ajudarÃ¡ a identificar Ã¡reas de melhorias a fim de continuar oferecendo um serviÃ§o de qualidade. ð\n\nAvalie meu atendimento !\n{{ ($json.extra.cwpublic ?? $env[\"C8Q_CW_PUBLIC_URL\"] ?? $json.extra.cwhost).trimEnd('/') }}/survey/responses/{{$json.body.content.split('/').at(-1)}}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "2069e6ff-b4d8-4673-80de-6c2236d8b2cb",
      "name": "Custom Evaluation Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        -540,
        560
      ]
    }
  ],
  "connections": {
    "From ChatWoot": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Created Event": {
      "main": [
        [
          {
            "node": "Is Outgoing Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Message ?": {
      "main": [
        [
          {
            "node": "If Control Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Created Event": {
      "main": [
        [
          {
            "node": "Sent by agent ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message ?": {
      "main": [
        [
          {
            "node": "If Template",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Incoming !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Public ?": {
      "main": [
        [
          {
            "node": "Is Not From Sincronize Bot?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Private !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Not From Sincronize Bot?": {
      "main": [
        [
          {
            "node": "From Quepasa Control ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "From Customer !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Control Message": {
      "main": [
        [
          {
            "node": "Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Should Prepend Agent Title ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Chat Control Workflow": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sent by agent ?": {
      "main": [
        [
          {
            "node": "Open Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open Conversation": {
      "main": [
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Message Update Event",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Not Message Created Event !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Update Event": {
      "main": [
        [
          {
            "node": "If Deleted ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Deleted ?": {
      "main": [
        [
          {
            "node": "Is Outgoing Message Update ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Has Attachment ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "Switch Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To Profile Update Workflow": {
      "main": [
        [
          {
            "node": "Normal Exit (CUP)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enabled CSAT ?": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Use CSAT ?": {
      "main": [
        [],
        [
          {
            "node": "Payload Without CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Use CSAT ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Resolved": {
      "main": [
        [
          {
            "node": "If Not Control & Not Broadcast",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Update Contact Payload": {
      "main": [
        [
          {
            "node": "Throw To Profile Update Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Status Changed  Event": {
      "main": [
        [
          {
            "node": "Ensure ChatId From Custom|Email|Source|Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Enabled CSAT ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation By Contact": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evaluation Message Payload Ready To Quepasa": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Resolved Message": {
      "main": [
        [
          {
            "node": "If Conversation Resolved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload": {
      "main": [
        [
          {
            "node": "Text Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Without CSAT": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Account Found ?": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Account From Inbox",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Account in Query": {
      "main": [
        [
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Account Id": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Quepasa Control ?": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Inbox Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Event": {
      "main": [
        [
          {
            "node": "Message Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Status Changed  Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Control & Not Broadcast": {
      "main": [
        [
          {
            "node": "Account Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Prepend Agent Title ?": {
      "main": [
        [
          {
            "node": "Update Content With Agent Ttitle",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Content With Agent Ttitle": {
      "main": [
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow after prepend": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluate By Conversation": {
      "main": [
        [],
        [
          {
            "node": "Skip Evaluation By Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Text": {
      "main": [
        [
          {
            "node": "Has Errors ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Info": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Is Public Update ?": {
      "main": [
        [
          {
            "node": "Quepasa Revoke",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message Update ?": {
      "main": [
        [
          {
            "node": "Is Public Update ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ensure ChatId From Custom|Email|Source|Phone": {
      "main": [
        [
          {
            "node": "Post Resolved Message",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Update Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Account From Inbox": {
      "main": [
        [
          {
            "node": "Set Account in Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Attachment ?": {
      "main": [
        [
          {
            "node": "If Remote Storage",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Errors ?": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Normal Exit (RAS)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Message Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Isn't Verified ?": {
      "main": [
        [
          {
            "node": "Success ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success ?": {
      "main": [
        [
          {
            "node": "Disconnected Failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Isn't Verified ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Attach": {
      "main": [
        [
          {
            "node": "Has Errors ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Remote Storage": {
      "main": [
        [
          {
            "node": "Wait For Uploading",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Uploading": {
      "main": [
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Template": {
      "main": [
        [
          {
            "node": "Switch Template",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Template": {
      "main": [
        [
          {
            "node": "Skip Evaluation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip Greetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation": {
      "main": [
        [],
        [
          {
            "node": "Custom Evaluation Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Greetings": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Custom Evaluation Content": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 50,
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "pinData": {},
  "versionId": "2b661853-dd20-458a-b4c3-0ea0faea604e",
  "triggerCount": 1,
  "tags": [
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2022-10-13T15:26:11.519Z",
      "updatedAt": "2023-08-25T18:50:53.269Z",
      "id": "5",
      "name": "quepasa"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ],
  "NOME": "ChatwootToQuepasa",
  "PASTA": "3.24.617.1651"
}