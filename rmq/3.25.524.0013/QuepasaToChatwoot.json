{
  "createdAt": "2025-02-07T01:25:28.896Z",
  "updatedAt": "2025-06-04T02:07:12.045Z",
  "id": "1009",
  "name": "QuepasaToChatwoot",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        340,
        2600
      ],
      "id": "60482ec3-f7bb-4d6b-8768-ff0c8e643871"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "f7a5a2b1-2fb0-40ed-b0f7-e70b553bf8b4",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        540,
        2720
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5880,
        2540
      ],
      "id": "f9fb01c9-7fcd-4e82-8252-cd1ed5e1a83a"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOCHATWOOT'] ?? 1006 }}",
        "options": {}
      },
      "id": "bef882a6-04ac-4423-8821-7be72ce72db7",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6080,
        2520
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Call Request",
        "height": 354.0653279804751,
        "width": 967.8745465301596
      },
      "id": "e72d64e8-2bba-4eca-ab18-e69b74fbceec",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3660,
        1780
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "={{ $env['C8Q_MSGFOR_CALL_CONTENT'] ?? '\\u2699 O usuário requisitou uma chamada de voz !' }}\n____________________________________________________\n✉ {{ $json.status ?? $json.message }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "939d31d1-7cdc-4fe1-b5f5-5b6aebf9a884",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4360,
        1920
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOWEBCALLBACK'] ?? 1005 }}",
        "options": {}
      },
      "id": "dfa01b47-9bf0-4bdb-a8db-e9aa585d93ce",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3940,
        1840
      ],
      "executeOnce": true,
      "disabled": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.source_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.echo_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply ? +$json.inreply : undefined }}"
            },
            {
              "name": "attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "synopsis",
              "value": "={{$json.synopsis}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "participant.phone",
              "value": "={{$json.participant?.phone}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            },
            {
              "name": "event",
              "value": "={{ $json.type }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            },
            {
              "name": "payload.edited",
              "value": "={{ $json.edited ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5680,
        2540
      ],
      "id": "0a151611-0a9e-42f7-b252-78f0f5cbe76b"
    },
    {
      "parameters": {
        "content": "## (1.0.25) Updates\n* ads\n\n## Recommendations \n* Remember set timeout to 30 seconds",
        "height": 184.64873580281272,
        "width": 569.6036185132486
      },
      "id": "447038a6-5cf9-4ead-a881-8a8c34cf686d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1120,
        2240
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_GETCHATWOOTCONTACTS'] ?? 1002 }}",
        "options": {}
      },
      "id": "2cc544fe-024d-46a5-a026-e61dc68fdf5e",
      "name": "Throw Get Chatwoot Contacts Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1820,
        2700
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=\nSELECT id AS inreply_internal_id\nFROM messages \nWHERE source_id = '{{ $json.inreply }}'\nLIMIT 1",
        "options": {}
      },
      "id": "98f90409-932d-4e1d-9783-e70e69a6d481",
      "name": "Get In Reply Reference Id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4140,
        2460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "bfea7b78-9b9b-4fc5-bf84-cd3e858ba01b",
      "name": "Merging Found Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4380,
        2260
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply",
              "value": "={{ $json.inreply_internal_id }}"
            },
            {
              "name": "synopsis",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b0fbebbb-9b16-4dd3-86c0-4f85fbca7898",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        4760,
        2280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply }}",
              "operation": "contains",
              "value2": "-"
            }
          ]
        }
      },
      "id": "8af70c84-7a2c-4a3a-b8b2-a1556cf77adc",
      "name": "If Has Hiffen",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3940,
        2340
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply_internal_id",
              "value": "={{ $json.inreply.split(/-/).pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f65d98f4-3d68-4186-b255-563213d3b78b",
      "name": "Set Internal Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        4140,
        2320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply_internal_id }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "a4283053-e97c-4666-b080-a1ad821be5ec",
      "name": "If Not Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4560,
        2260
      ]
    },
    {
      "parameters": {},
      "id": "ac271a8e-a146-4f6f-ae0a-bbe345f876f5",
      "name": "(In) Revoked Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1080,
        2140
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "revoked",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "aef52265-29de-48fb-8d0f-73491a18002f",
      "name": "Set Retrieved Chatwoot Revoked Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1900,
        1940
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3eefd1ad-7ba1-4f50-aecd-c73322dda129",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2220,
        2120
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.extra.cwhost }}/api/v1/accounts/{{ $json.revoked.account_id }}/conversations/{{ $json.revoked.conversation_id }}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n   \"private\": false,\n   \"content\": \"{{ $env['C8Q_MSGFOR_REVOKED_CONTENT'] ?? '\\u274C Essa mensagem foi apagada !!!' }}\",\n   \"message_type\": 2,\n   \"content_attributes\": {      \n      \"in_reply_to\": {{ +$json.revoked.id }},\n      \"in_reply_to_external_id\": \"{{ $json.body.id }}\"\n   },\n   \"content_type\": \"text\"\n}",
        "headerParametersJson": "={ \"api_access_token\": \"{{ $json.extra.atoken }}\" }"
      },
      "name": "Send Revoked Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2440,
        2120
      ],
      "id": "76c90923-f804-4a8f-84d7-cd0d51dd38f5",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "content": "## Message Revoked From Source\n\n",
        "height": 511.52099560219085,
        "width": 1735.9412743995279
      },
      "id": "17503a6f-38e2-42d6-bb69-3f974eb9bea7",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        1780
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.account_id, conversations.display_id as conversation_id, messages.id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.extra.account }}' AND messages.source_id = '{{ $json.body.id }}';",
        "options": {}
      },
      "id": "72e89e42-60a6-4071-9208-63845704ec62",
      "name": "Get Revoked Message Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1680,
        2060
      ],
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{  $json.body.id }}",
              "operation": "contains",
              "value2": "-"
            }
          ]
        }
      },
      "id": "8cfd2bb5-ea35-44b9-a445-1430c7bd2e5d",
      "name": "If Sended By Chatwoot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1280,
        2040
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.account_id, conversations.display_id as conversation_id, messages.id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.extra.account }}' AND messages.id = '{{ $json.internalid }}';",
        "options": {}
      },
      "id": "9d72ba40-badf-449b-9fd4-dd1f4091cf3b",
      "name": "Get Revoked Internal Message Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1680,
        1820
      ],
      "credentials": {
        "postgres": {
          "id": "HsCApB9t5UDljO9u",
          "name": "DB-Chatwoot"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function isNumeric(str) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\nconst splitted = $input.item.json.body.id.split(/-/);\nlet internalid = splitted.pop();\nif (!isNumeric(internalid)){\n  internalid = splitted[2];\n}\n\n$input.item.json.internalid = internalid;\nreturn $input.item;"
      },
      "id": "7e17d69f-5e83-465c-b6fe-df4d12f34826",
      "name": "Get Internal Id",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "95c98f48-aa51-4f1c-aaab-9a60687df35d",
      "name": "If Success To Get Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2000,
        2700
      ]
    },
    {
      "parameters": {},
      "id": "83dc33f2-6fb8-4282-beca-2cfce7978580",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3740,
        1940
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "4142486b-45e3-43c6-9daa-9ad2b4adf613",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4140,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.content.body.chat.id }}",
              "value2": "system"
            },
            {
              "value1": "={{ $json.content.body.text }}",
              "operation": "regex",
              "value2": "^\\/api|^\\/\\/|^\\/invite[\\s]*?$"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "1f37eb8d-2aba-4e10-9a48-fce42c7fc834",
      "name": "If Chat Control",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1620,
        2600
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}",
        "options": {}
      },
      "id": "11f46dcb-996c-4a62-8add-2c57eee97a6b",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1820,
        2500
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "81502617-5d46-42d7-b2ba-989c74c6b047",
      "name": "Edited Contact (Not Implemented)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        340,
        2420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "510fae79-4d90-4ddd-93a4-4201cba493a1",
              "leftValue": "={{ $json.content.body.type }}",
              "rightValue": "contact",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "0b649b71-4626-47f6-a483-36a505f13c86",
              "leftValue": "={{ $json.content.body.edited }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "71ac0c47-af41-42af-aee9-588cffac65f2",
      "name": "Not Implemented ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        160,
        2580
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "id": "9ab67ec2-3c5e-49c8-b3d5-042c8b376c65",
      "name": "No Valid Contact Found",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2180,
        2780
      ]
    },
    {
      "parameters": {},
      "id": "3df3c1b9-239c-4038-9fff-267675620584",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3060,
        2660
      ]
    },
    {
      "parameters": {},
      "id": "35a5f867-b177-4011-ab36-a7b4934f1f46",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2180,
        2600
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "account",
              "value": "={{ $json.content.body.extra.account }}"
            },
            {
              "key": "inbox",
              "value": "={{ $json.content.body.extra.inbox }}"
            },
            {
              "key": "chat_id",
              "value": "={{ $json.content.body.chat.id }}"
            },
            {
              "key": "message_id",
              "value": "={{ $json.content.body.id }}"
            },
            {
              "key": "from_history",
              "value": "={{ $json.content.body.fromhistory ?? '' }}"
            }
          ]
        }
      },
      "id": "d62eab24-8e57-45eb-9d93-68d79723c426",
      "name": "Execution Data",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -400,
        2320
      ],
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 278.9574374256098,
        "width": 388.46252278582097
      },
      "id": "0478725f-5b92-4e79-b3b2-a831560664f9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -540,
        2240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0415efe6-f826-4f65-85fc-7597b989b7aa",
              "leftValue": "={{ $json.conversation }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3a76ebf7-18fd-4abb-9d80-8bf69f240806",
      "name": "If Should Ignore",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2860,
        2640
      ]
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "conversation",
              "value": "ignored"
            }
          ]
        }
      },
      "id": "fa6360e4-625b-43aa-93dc-8bf200bbaf6d",
      "name": "Execution Data Conversation",
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        3060,
        2460
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_GETVALIDCONVERSATION'] ?? 'qjdP01sHPfaPFUq1' }}",
        "options": {}
      },
      "id": "fca5d1b6-1bd2-435d-b981-3075eddfd4af",
      "name": "Throw Get Valid Conversation Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        2420,
        2740
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "445285da-c459-43ba-9d3c-250ca476451f",
              "leftValue": "={{ $('EXTRA').item.json.typebot }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "9ab7a96b-d61c-45c8-8f50-12017333dbf2",
              "leftValue": "={{ $json.chat.id }}",
              "rightValue": "@g.us",
              "operator": {
                "type": "string",
                "operation": "notEndsWith"
              }
            },
            {
              "id": "e3dc51b1-23e0-4e30-9c3d-73168ea1244f",
              "leftValue": "={{ ![\"true\", \"1\"].includes($json.fromme?.toString().trim().toLowerCase()) }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "a8c41deb-c3ae-4e8d-ab43-825a66520ea1",
              "leftValue": "={{ $json.conversation.status }}",
              "rightValue": "pending",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "0bbfb13c-3c86-4572-9ff1-13071809efa8",
              "leftValue": "={{ $json.chat.id }}",
              "rightValue": "@broadcast",
              "operator": {
                "type": "string",
                "operation": "notEndsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "id": "e34d7bc0-6852-4b7e-ab8c-18400077d1f9",
      "name": "If TypeBot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        6300,
        2660
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body.extra }}",
        "options": {}
      },
      "id": "f8c987d5-4511-4206-aff9-135ec5d8ef2f",
      "name": "EXTRA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -220,
        2580
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{  $('Consumir-Fila-QPController').item.json ?? $('Webhook Chatwoot').item.json }}",
        "options": {}
      },
      "id": "7c38018d-41cc-4284-a1f5-97d97c0ff509",
      "name": "PAYLOAD",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -40,
        2580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "1c579343-bd65-4075-bf54-fb739420d936",
              "leftValue": "={{ $json.body.fromhistory }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7e8bfe5f-7a66-4dcb-b71c-f162e2b76d7e",
      "name": "From History ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -400,
        2800
      ]
    },
    {
      "parameters": {
        "workflowId": "aB4ojM1SPNSe9enO",
        "options": {}
      },
      "id": "5c68a61d-458e-4ecf-aa03-dec09e9f0d58",
      "name": "Throw History Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -200,
        2780
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_WF_TOTYPEBOT'] ?? 'JSpCXQiF7TT1zUgp' }}",
        "mode": "each",
        "options": {}
      },
      "id": "25c80cfd-58b9-4936-8602-c3196f50d265",
      "name": "Execute Workflow ToTypebot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6520,
        2640
      ],
      "continueOnFail": true,
      "onError": "continueRegularOutput",
      "notes": "Criado para lidar com typebot"
    },
    {
      "parameters": {
        "content": "## DEBUG",
        "height": 278.9574374256098,
        "width": 388.46252278582097
      },
      "id": "7acd6c34-6674-4f81-affc-23c3e3651e0a",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2920,
        2360
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "body.extra.cwhost",
              "value": "={{ $env[\"C8Q_CW_HOST\"] }}"
            },
            {
              "name": "params",
              "value": "={{ $json.content.params ?? undefined}}"
            },
            {
              "name": "headers",
              "value": "={{$json.content.headers ?? undefined}}"
            },
            {
              "name": "query",
              "value": "={{$json.content.query ?? undefined}}"
            }
          ]
        },
        "options": {}
      },
      "id": "d92d40e5-8fae-426c-9693-b864f4947ff5",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -400,
        2580
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{ $('EXTRA').item.json }}"
            },
            {
              "name": "body.extra",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "98ac3432-244a-49bc-bc93-1c185f2f3373",
      "name": "Extra For Compatibility",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        540,
        2580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c33fd1c7-4d17-44b0-81b0-2af7580171d0",
              "name": "body.text",
              "value": "=⚠ **Mensagem de Anuncio!**\n&nbsp;\nTexto Anuncio: {{ $json.content.body.ads.title }}\nURL: {{ $json.content.body.ads.sourceurl }}\n&nbsp;\n**Informações**\n- **SourceID:** {{ $json.content.body.ads.sourceid }}\n- **Fonte:** {{ $json.content.body.ads.app.toUpperCase() }}\n- **ID:** {{ $json.content.body.ads.id }}\n- **Tipo:** {{ $if($json.content.body.ads.type = \"ad\", \"Anuncio\", $json.content.body.ads.type) }}\n&nbsp;\n**Resposta do contato:** {{ $json.content.body.text }}",
              "type": "string"
            },
            {
              "id": "989664a6-d8ce-4712-8daf-d39a14b3749e",
              "name": "body.attachment",
              "value": "={\n  \"data\": \"{{ $json.content.body.ads.thumbnail.data }}\",\n  \"mime\": \"{{ $json.content.body.ads.thumbnail.mime }}\"\n}",
              "type": "object"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1200,
        2500
      ],
      "id": "6e10fe56-736f-41bb-899d-78c6efac5666",
      "name": "Info From Ads"
    },
    {
      "parameters": {},
      "id": "bbd71518-1a2b-46b4-8cfb-4808f9549325",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3740,
        2240
      ]
    },
    {
      "parameters": {
        "content": "## In Reply\n",
        "height": 494.6717652023667,
        "width": 1367.6379464747529
      },
      "id": "281f9e59-171e-49c0-852d-78e379963f24",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3660,
        2160
      ]
    },
    {
      "parameters": {
        "content": "## From Ads\n\n",
        "height": 303.63298489371886,
        "width": 441.5592687849586
      },
      "id": "1b37b887-3f29-4a0a-bb8b-68823639ab02",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1040,
        2420
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "fe52c629-ebef-41cf-815d-4e1662283342",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2680,
        2640
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.type }}",
                    "rightValue": "call",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "call"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d5c3f79-390f-4ce7-b313-40f60dd269f1",
                    "leftValue": "={{ $json.inreply }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "inreply"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "6715012c-71c1-4954-858c-cfd77c36cbd4",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3340,
        2640
      ]
    },
    {
      "parameters": {},
      "id": "8918ed11-96b0-4138-a2f9-8216ee7e6bc2",
      "name": "Follow to Chatwoottryrtyrty",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5040,
        2060
      ]
    },
    {
      "parameters": {},
      "id": "af2e1e4c-d302-4395-8352-547d589c3882",
      "name": "Follow to Chatwoot",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5460,
        2660
      ]
    },
    {
      "parameters": {
        "queue": "QPController",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "ba437dae-bf87-4991-a353-7316300829f1",
      "name": "Inserir-Itens-Fila-QPController",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1.1,
      "position": [
        -560,
        1920
      ],
      "credentials": {
        "rabbitmq": {
          "id": "wok2ngP4MwFtnMJS",
          "name": "RabbitMQ"
        }
      }
    },
    {
      "parameters": {
        "queue": "QPController",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "acknowledge": "executionFinishesSuccessfully",
          "jsonParseBody": true,
          "parallelMessages": 1
        }
      },
      "id": "cc817e23-699e-45dc-9bf3-51540ef2519e",
      "name": "Consumir-Fila-QPController",
      "type": "n8n-nodes-base.rabbitmqTrigger",
      "typeVersion": 1,
      "position": [
        -800,
        2580
      ],
      "credentials": {
        "rabbitmq": {
          "id": "wok2ngP4MwFtnMJS",
          "name": "RabbitMQ"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "05465cd9-f381-459b-98d7-93828f51e7c7",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -860,
        1920
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.content.body.type }}",
                    "rightValue": "revoke",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "revoke"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d5c3f79-390f-4ce7-b313-40f60dd269f1",
                    "leftValue": "={{ $json.content.body.ads }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ads"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "516583f6-caba-4834-857a-bf729c13f4a8",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        740,
        2580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $env[\"C8Q_N8N_WEBHOOK\"] }}/webhook/reject-call",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost }}"
            },
            {
              "name": "extra.identifier",
              "value": "={{ $json.extra.identifier }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.extra.account }}"
            },
            {
              "name": "extra.atoken",
              "value": "={{ $json.extra.atoken }}"
            },
            {
              "name": "extra.utoken",
              "value": "={{ $json.extra.utoken }}"
            },
            {
              "name": "extra.cwhots",
              "value": "={{ $json.extra.cwhost }}"
            },
            {
              "name": "chat.title",
              "value": "={{ $json.chat.title }}"
            },
            {
              "name": "chat.id",
              "value": "={{ $json.chat.id }}"
            },
            {
              "name": "chat.phone",
              "value": "={{ $json.chat.phone }}"
            },
            {
              "name": "conversation.id",
              "value": "={{ $json.conversation.id }}"
            },
            {
              "name": "conversation.status",
              "value": "={{ $json.conversation.status }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5c6b5a46-f7ea-4e24-ba1c-d57fde0ee9b9",
      "name": "MsgRejectCall",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3940,
        1600
      ]
    }
  ],
  "connections": {
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Extra For Compatibility",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Follow to Chatwoottryrtyrty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To WebCallBack Telephony Workflow": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw Get Chatwoot Contacts Workflow": {
      "main": [
        [
          {
            "node": "If Success To Get Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get In Reply Reference Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merging Found Id": {
      "main": [
        [
          {
            "node": "If Not Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "Follow to Chatwoottryrtyrty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Hiffen": {
      "main": [
        [
          {
            "node": "Set Internal Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get In Reply Reference Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Internal Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Not Found": {
      "main": [
        [
          {
            "node": "Follow to Chatwoottryrtyrty",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Revoked Message": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          },
          {
            "node": "If Sended By Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Retrieved Chatwoot Revoked Info": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Send Revoked Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Revoked Message Info": {
      "main": [
        [
          {
            "node": "Set Retrieved Chatwoot Revoked Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Sended By Chatwoot": {
      "main": [
        [
          {
            "node": "Get Internal Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Revoked Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Revoked Internal Message Info": {
      "main": [
        [
          {
            "node": "Set Retrieved Chatwoot Revoked Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Internal Id": {
      "main": [
        [
          {
            "node": "Get Revoked Internal Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Success To Get Contact": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Valid Contact Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          },
          {
            "node": "MsgRejectCall",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Control": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Throw Get Chatwoot Contacts Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not Implemented ?": {
      "main": [
        [
          {
            "node": "Edited Contact (Not Implemented)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Throw Get Valid Conversation Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Should Ignore": {
      "main": [
        [
          {
            "node": "Execution Data Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw Get Valid Conversation Workflow": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If TypeBot": {
      "main": [
        [
          {
            "node": "Execute Workflow ToTypebot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXTRA": {
      "main": [
        [
          {
            "node": "PAYLOAD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PAYLOAD": {
      "main": [
        [
          {
            "node": "Not Implemented ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From History ?": {
      "main": [
        [
          {
            "node": "Throw History Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "EXTRA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extra For Compatibility": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Info From Ads": {
      "main": [
        [
          {
            "node": "If Chat Control",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 0
          },
          {
            "node": "If Has Hiffen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "If Should Ignore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow to Chatwoottryrtyrty": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow to Chatwoot": {
      "main": [
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "If TypeBot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consumir-Fila-QPController": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          },
          {
            "node": "From History ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Inserir-Itens-Fila-QPController",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "(In) Revoked Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Info From Ads",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Chat Control",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30,
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "pinData": {
    "Consumir-Fila-QPController": [
      {
        "json": {
          "fields": {
            "consumerTag": "amq.ctag-qAGAlc2-gZbqh3iWLbBY_Q",
            "deliveryTag": 25,
            "redelivered": false,
            "exchange": "",
            "routingKey": "QPController"
          },
          "properties": {
            "headers": {}
          },
          "content": {
            "headers": {
              "host": "webhook.developermaster.com.br",
              "user-agent": "Quepasa",
              "content-length": "615",
              "accept-encoding": "gzip",
              "content-type": "application/json",
              "x-forwarded-for": "172.18.0.1",
              "x-forwarded-host": "webhook.developermaster.com.br",
              "x-forwarded-port": "443",
              "x-forwarded-proto": "https",
              "x-forwarded-server": "615e8de57d7d",
              "x-quepasa-wid": "556137702634:77@s.whatsapp.net",
              "x-real-ip": "172.18.0.1"
            },
            "params": {},
            "query": {},
            "body": {
              "id": "3EB0545082753ED3A7793F",
              "timestamp": "2025-06-03T22:59:09.722-03:00",
              "type": "contact",
              "chat": {
                "id": "556137702634@s.whatsapp.net",
                "lid": "57780765462700@lid",
                "title": "Teste Deivid S"
              },
              "text": "Teste Deivid S",
              "attachment": {
                "mime": "text/x-vcard",
                "filelength": 87,
                "filename": "teste-deivid-s.vcf"
              },
              "fromme": false,
              "frominternal": false,
              "edited": true,
              "wid": "556137702634:77@s.whatsapp.net",
              "extra": {
                "account": 1,
                "atoken": "50e28457d06de6c3d456a01",
                "identifier": "c45BgZyXwERQ8LwGUqfE6jxA",
                "inbox": 1,
                "qphost": "https://apiqp2.developermaster.com.br",
                "qptoken": "c45BgZyXwERQ8LwGUqfE6jxA",
                "utoken": "Wx832mMujwGsPXcKEhbCpf3n"
              }
            },
            "webhookUrl": "https://webhook.developermaster.com.br/webhook/to-chatwoot",
            "executionMode": "production"
          }
        }
      }
    ]
  },
  "versionId": "bc73419c-109c-4cc5-803f-f1cea7f50533",
  "triggerCount": 2,
  "tags": [
    {
      "createdAt": "2024-05-24T01:34:15.401Z",
      "updatedAt": "2024-05-24T01:34:15.401Z",
      "id": "PHDp1yoMiVikbrb2",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ],
  "versao-qp": "3.25.524.0013",
  "Workflow-Nome": "QuepasaToChatwoot"
}